{"ast":null,"code":"import axios from \"axios\";\nimport { BOOKMARK_RECIPE, UNBOOKMARK_RECIPE } from \"../components/actionTypes\";\nconst API_URL = \"http://localhost:5000\";\nexport const bookmarkRecipe = (username, recipeId) => {\n  return async dispatch => {\n    try {\n      const resp = await axios.post(`${API_URL}/users/bookmarkRecipe`, {\n        username,\n        recipeId\n      });\n      dispatch(bookmarkedRecipe(recipeId));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst bookmarkedRecipe = recipeId => {\n  return {\n    type: BOOKMARK_RECIPE,\n    payload: {\n      recipeId\n    }\n  };\n};\n\nexport const unbookmarkRecipe = (username, recipeId) => {\n  return async dispatch => {\n    try {\n      const resp = await axios.post(`${API_URL}/users/unbookmarkRecipe`, {\n        username,\n        recipeId\n      });\n      dispatch(unbookmarkedRecipe(recipeId));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst unbookmarkedRecipe = recipeId => {\n  return {\n    type: UNBOOKMARK_RECIPE,\n    payload: {\n      recipeId\n    }\n  };\n};\n\nexport const getAllBookmarks = async username => {\n  const bookmarks = await axios.get(`${API_URL}/users/getAllBookmarks`, {\n    username\n  });\n  return bookmarks;\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/actionCreators/bookmarkActionCreators.js"],"names":["axios","BOOKMARK_RECIPE","UNBOOKMARK_RECIPE","API_URL","bookmarkRecipe","username","recipeId","dispatch","resp","post","bookmarkedRecipe","e","console","error","type","payload","unbookmarkRecipe","unbookmarkedRecipe","getAllBookmarks","bookmarks","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,2BAAnD;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrD,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAEN,OAAQ,uBAAtB,EAA8C;AAChEE,QAAAA,QADgE;AAEhEC,QAAAA;AAFgE,OAA9C,CAAnB;AAIAC,MAAAA,QAAQ,CAACG,gBAAgB,CAACJ,QAAD,CAAjB,CAAR;AACA,KAND,CAME,OAAOK,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GAVD;AAWA,CAZM;;AAcP,MAAMD,gBAAgB,GAAIJ,QAAD,IAAc;AACtC,SAAO;AACNQ,IAAAA,IAAI,EAAEb,eADA;AAENc,IAAAA,OAAO,EAAE;AACRT,MAAAA;AADQ;AAFH,GAAP;AAMA,CAPD;;AASA,OAAO,MAAMU,gBAAgB,GAAG,CAACX,QAAD,EAAWC,QAAX,KAAwB;AACvD,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAEN,OAAQ,yBAAtB,EAAgD;AAClEE,QAAAA,QADkE;AAElEC,QAAAA;AAFkE,OAAhD,CAAnB;AAIAC,MAAAA,QAAQ,CAACU,kBAAkB,CAACX,QAAD,CAAnB,CAAR;AACA,KAND,CAME,OAAOK,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GAVD;AAWA,CAZM;;AAcP,MAAMM,kBAAkB,GAAIX,QAAD,IAAc;AACxC,SAAO;AACNQ,IAAAA,IAAI,EAAEZ,iBADA;AAENa,IAAAA,OAAO,EAAE;AACRT,MAAAA;AADQ;AAFH,GAAP;AAMA,CAPD;;AASA,OAAO,MAAMY,eAAe,GAAG,MAAOb,QAAP,IAAoB;AAClD,QAAMc,SAAS,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEjB,OAAQ,wBAArB,EAA8C;AACrEE,IAAAA;AADqE,GAA9C,CAAxB;AAGA,SAAOc,SAAP;AACA,CALM","sourcesContent":["import axios from \"axios\";\nimport { BOOKMARK_RECIPE, UNBOOKMARK_RECIPE } from \"../components/actionTypes\";\n\nconst API_URL = \"http://localhost:5000\";\n\nexport const bookmarkRecipe = (username, recipeId) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resp = await axios.post(`${API_URL}/users/bookmarkRecipe`, {\n\t\t\t\tusername,\n\t\t\t\trecipeId,\n\t\t\t});\n\t\t\tdispatch(bookmarkedRecipe(recipeId));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst bookmarkedRecipe = (recipeId) => {\n\treturn {\n\t\ttype: BOOKMARK_RECIPE,\n\t\tpayload: {\n\t\t\trecipeId,\n\t\t},\n\t};\n};\n\nexport const unbookmarkRecipe = (username, recipeId) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resp = await axios.post(`${API_URL}/users/unbookmarkRecipe`, {\n\t\t\t\tusername,\n\t\t\t\trecipeId,\n\t\t\t});\n\t\t\tdispatch(unbookmarkedRecipe(recipeId));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst unbookmarkedRecipe = (recipeId) => {\n\treturn {\n\t\ttype: UNBOOKMARK_RECIPE,\n\t\tpayload: {\n\t\t\trecipeId,\n\t\t},\n\t};\n};\n\nexport const getAllBookmarks = async (username) => {\n\tconst bookmarks = await axios.get(`${API_URL}/users/getAllBookmarks`, {\n\t\tusername,\n\t});\n\treturn bookmarks;\n};\n"]},"metadata":{},"sourceType":"module"}