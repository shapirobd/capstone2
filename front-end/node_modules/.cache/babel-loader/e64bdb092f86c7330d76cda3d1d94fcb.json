{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport convertDate from \"../../helpers/convertDate\";\nimport { getDailyMacros, getDateMacros } from \"./helpers/dailyHelpers\";\nimport { getWeeklyMacros, getWeekNumber, getWeekDates } from \"./helpers/weeklyHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrackerPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  const [calendarDate, setCalendarDate] = useState(new Date());\n  const [dayState, setDayState] = useState({\n    date: convertDate(calendarDate),\n    macros: {\n      carbs: 0,\n      fat: 0,\n      protein: 0\n    }\n  });\n  const [weekState, setWeekState] = useState({\n    weekNumber: null,\n    dates: getWeekDates(calendarDate),\n    weekData: {}\n  });\n  const [pieChartData, setPieChartData] = useState(getDailyMacros());\n  const [barChartData, setBarChartData] = useState(getWeeklyMacros(weekState.weekData));\n  useEffect(() => {\n    getDateMacros(user, \"day\", convertDate(calendarDate), setDayState);\n\n    if (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n      setWeekState({\n        weekNumber: getWeekNumber(calendarDate),\n        dates: getWeekDates(calendarDate),\n        weekData: getWeekMacros(getWeekDates(calendarDate))\n      });\n    }\n  }, [calendarDate]);\n  useEffect(() => {\n    setPieChartData(getDailyMacros(dayState.macros.carbs, dayState.macros.fat, dayState.macros.protein));\n  }, [dayState]);\n  useEffect(() => {\n    setBarChartData(getWeeklyMacros(weekState.weekData));\n  }, [weekState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [console.log(weekState), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 2,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 4,\n        className: classes.gridItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.calendarDiv,\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setCalendarDate,\n            value: calendarDate,\n            minDetail: \"year\",\n            calendarType: \"US\",\n            className: classes.calendar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.doughnutDiv,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Daily Macros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: pieChartData,\n            className: classes.doughnut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 8,\n        className: classes.gridItem,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.barChartDiv,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Weekly Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: barChartData,\n            className: classes.barChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrackerPage, \"6GqRF69I+xfKsTb5/nlKyqj61Ks=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TrackerPage;\nexport default TrackerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackerPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js"],"names":["React","useState","useEffect","useSelector","Grid","Typography","ButtonGroup","Button","useStyles","Doughnut","Bar","Calendar","convertDate","getDailyMacros","getDateMacros","getWeeklyMacros","getWeekNumber","getWeekDates","TrackerPage","classes","user","state","calendarDate","setCalendarDate","Date","dayState","setDayState","date","macros","carbs","fat","protein","weekState","setWeekState","weekNumber","dates","weekData","pieChartData","setPieChartData","barChartData","setBarChartData","getWeekMacros","width","console","log","root","gridItem","calendarDiv","calendar","doughnutDiv","doughnut","barChartDiv","barChart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport convertDate from \"../../helpers/convertDate\";\nimport { getDailyMacros, getDateMacros } from \"./helpers/dailyHelpers\";\nimport {\n\tgetWeeklyMacros,\n\tgetWeekNumber,\n\tgetWeekDates,\n} from \"./helpers/weeklyHelpers\";\n\nconst TrackerPage = () => {\n\tconst classes = useStyles();\n\tconst user = useSelector((state) => state.user);\n\tconst [calendarDate, setCalendarDate] = useState(new Date());\n\tconst [dayState, setDayState] = useState({\n\t\tdate: convertDate(calendarDate),\n\t\tmacros: {\n\t\t\tcarbs: 0,\n\t\t\tfat: 0,\n\t\t\tprotein: 0,\n\t\t},\n\t});\n\tconst [weekState, setWeekState] = useState({\n\t\tweekNumber: null,\n\t\tdates: getWeekDates(calendarDate),\n\t\tweekData: {},\n\t});\n\n\tconst [pieChartData, setPieChartData] = useState(getDailyMacros());\n\tconst [barChartData, setBarChartData] = useState(\n\t\tgetWeeklyMacros(weekState.weekData)\n\t);\n\n\tuseEffect(() => {\n\t\tgetDateMacros(user, \"day\", convertDate(calendarDate), setDayState);\n\t\tif (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n\t\t\tsetWeekState({\n\t\t\t\tweekNumber: getWeekNumber(calendarDate),\n\t\t\t\tdates: getWeekDates(calendarDate),\n\t\t\t\tweekData: getWeekMacros(getWeekDates(calendarDate)),\n\t\t\t});\n\t\t}\n\t}, [calendarDate]);\n\n\tuseEffect(() => {\n\t\tsetPieChartData(\n\t\t\tgetDailyMacros(\n\t\t\t\tdayState.macros.carbs,\n\t\t\t\tdayState.macros.fat,\n\t\t\t\tdayState.macros.protein\n\t\t\t)\n\t\t);\n\t}, [dayState]);\n\n\tuseEffect(() => {\n\t\tsetBarChartData(getWeeklyMacros(weekState.weekData));\n\t}, [weekState]);\n\n\treturn (\n\t\t<div style={{ width: \"100%\" }}>\n\t\t\t{console.log(weekState)}\n\t\t\t<Grid container cols={2} className={classes.root}>\n\t\t\t\t<Grid item cols={1} md={4} className={classes.gridItem}>\n\t\t\t\t\t<div className={classes.calendarDiv}>\n\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\tonChange={setCalendarDate}\n\t\t\t\t\t\t\tvalue={calendarDate}\n\t\t\t\t\t\t\tminDetail=\"year\"\n\t\t\t\t\t\t\tcalendarType=\"US\"\n\t\t\t\t\t\t\tclassName={classes.calendar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.doughnutDiv}>\n\t\t\t\t\t\t<Typography>Daily Macros</Typography>\n\t\t\t\t\t\t<Doughnut data={pieChartData} className={classes.doughnut} />\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item cols={1} md={8} className={classes.gridItem}>\n\t\t\t\t\t<div className={classes.barChartDiv}>\n\t\t\t\t\t\t<Typography variant=\"h3\">Weekly Data</Typography>\n\t\t\t\t\t\t<Bar data={barChartData} className={classes.barChart} />\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default TrackerPage;\n"]},"metadata":{},"sourceType":"module"}