{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\nconst API_URL = \"http://localhost:5000\";\nexport const login = data => {\n  return async dispatch => {\n    try {\n      console.log(data);\n      const loginResp = await axios.post(`${API_URL}/auth/login`, data);\n      console.log(loginResp);\n      const {\n        token\n      } = loginResp.data;\n      const userResp = await axios.get(`${API_URL}/users/${data.username}`);\n      dispatch(loggedIn(token, userResp.data));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst loggedIn = (token, user) => {\n  const {\n    username,\n    email,\n    first_name,\n    last_name\n  } = user;\n  return {\n    type: LOGIN,\n    payload: {\n      token,\n      user: {\n        username,\n        email,\n        first_name,\n        last_name\n      }\n    }\n  };\n};\n\nexport const logout = () => {\n  const action = {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/actionCreators/userActionCreators.js"],"names":["axios","LOGIN","LOGOUT","API_URL","login","data","dispatch","console","log","loginResp","post","token","userResp","get","username","loggedIn","e","error","user","email","first_name","last_name","type","payload","logout","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,gBAA9B;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,SAAS,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAEP,OAAQ,aAAtB,EAAoCE,IAApC,CAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,YAAM;AAAEE,QAAAA;AAAF,UAAYF,SAAS,CAACJ,IAA5B;AACA,YAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEV,OAAQ,UAASE,IAAI,CAACS,QAAS,EAA5C,CAAvB;AACAR,MAAAA,QAAQ,CAACS,QAAQ,CAACJ,KAAD,EAAQC,QAAQ,CAACP,IAAjB,CAAT,CAAR;AACA,KAPD,CAOE,OAAOW,CAAP,EAAU;AACXT,MAAAA,OAAO,CAACU,KAAR,CAAcD,CAAd;AACA;AACD,GAXD;AAYA,CAbM;;AAeP,MAAMD,QAAQ,GAAG,CAACJ,KAAD,EAAQO,IAAR,KAAiB;AACjC,QAAM;AAAEJ,IAAAA,QAAF;AAAYK,IAAAA,KAAZ;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,MAA6CH,IAAnD;AACA,SAAO;AACNI,IAAAA,IAAI,EAAErB,KADA;AAENsB,IAAAA,OAAO,EAAE;AACRZ,MAAAA,KADQ;AAERO,MAAAA,IAAI,EAAE;AACLJ,QAAAA,QADK;AAELK,QAAAA,KAFK;AAGLC,QAAAA,UAHK;AAILC,QAAAA;AAJK;AAFE;AAFH,GAAP;AAYA,CAdD;;AAgBA,OAAO,MAAMG,MAAM,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAG;AACdH,IAAAA,IAAI,EAAEpB;AADQ,GAAf;AAGA,CAJM","sourcesContent":["import axios from \"axios\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\n\nconst API_URL = \"http://localhost:5000\";\n\nexport const login = (data) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconsole.log(data);\n\t\t\tconst loginResp = await axios.post(`${API_URL}/auth/login`, data);\n\t\t\tconsole.log(loginResp);\n\t\t\tconst { token } = loginResp.data;\n\t\t\tconst userResp = await axios.get(`${API_URL}/users/${data.username}`);\n\t\t\tdispatch(loggedIn(token, userResp.data));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst loggedIn = (token, user) => {\n\tconst { username, email, first_name, last_name } = user;\n\treturn {\n\t\ttype: LOGIN,\n\t\tpayload: {\n\t\t\ttoken,\n\t\t\tuser: {\n\t\t\t\tusername,\n\t\t\t\temail,\n\t\t\t\tfirst_name,\n\t\t\t\tlast_name,\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport const logout = () => {\n\tconst action = {\n\t\ttype: LOGOUT,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}