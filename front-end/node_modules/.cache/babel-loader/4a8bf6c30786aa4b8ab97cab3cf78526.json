{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDate = (date = new Date()) => {\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = date.getFullYear();\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst data = {\n  labels: [\"Protein\", \"Carbohydraetes\", \"Fat\"],\n  datasets: [{\n    // label: \"Fat\",\n    data: [20, 40, 40],\n    backgroundColor: [\"red\", \"green\", \"blue\"]\n  }]\n};\nconst barData = {\n  labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n  datasets: [{\n    label: \"Fat\",\n    data: [120, 140, 130, 90, 200, 150, 110],\n    backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n  }]\n};\n\nconst TrackerPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(getDate());\n  const [calendarDate, setCalendarDate] = useState(new Date());\n  const [pieChartData, setPieChartData] = useState(data);\n  const [barChartData, setBarChartData] = useState(barData);\n  useEffect(() => {\n    setSelectedDate(calendarDate);\n  }, [calendarDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 2,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setCalendarDate,\n          value: calendarDate,\n          minDetail: \"year\",\n          className: classes.calendar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: pieChartData,\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 8,\n        className: classes.rightGridItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Weekly Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          color: \"primary\",\n          \"aria-label\": \"outlined primary button group\",\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Carbohydrates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData,\n          className: classes.barChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrackerPage, \"b4blalkCszMMMdAqSTBAP0HjStg=\", false, function () {\n  return [useStyles];\n});\n\n_c = TrackerPage;\nexport default TrackerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackerPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js"],"names":["React","useState","useEffect","Grid","Typography","ButtonGroup","Button","useStyles","Doughnut","Bar","Calendar","getDate","date","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","data","labels","datasets","backgroundColor","barData","label","TrackerPage","classes","selectedDate","setSelectedDate","calendarDate","setCalendarDate","pieChartData","setPieChartData","barChartData","setBarChartData","width","root","calendar","rightGridItem","buttonGroup","button","barChart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n\nconst getDate = (date = new Date()) => {\n\tlet dd = String(date.getDate()).padStart(2, \"0\");\n\tlet mm = String(date.getMonth() + 1).padStart(2, \"0\");\n\tlet yyyy = date.getFullYear();\n\treturn yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst data = {\n\tlabels: [\"Protein\", \"Carbohydraetes\", \"Fat\"],\n\tdatasets: [\n\t\t{\n\t\t\t// label: \"Fat\",\n\t\t\tdata: [20, 40, 40],\n\t\t\tbackgroundColor: [\"red\", \"green\", \"blue\"],\n\t\t},\n\t],\n};\n\nconst barData = {\n\tlabels: [\n\t\t\"Monday\",\n\t\t\"Tuesday\",\n\t\t\"Wednesday\",\n\t\t\"Thursday\",\n\t\t\"Friday\",\n\t\t\"Saturday\",\n\t\t\"Sunday\",\n\t],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: \"Fat\",\n\t\t\tdata: [120, 140, 130, 90, 200, 150, 110],\n\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t},\n\t],\n};\n\nconst TrackerPage = () => {\n\tconst classes = useStyles();\n\tconst [selectedDate, setSelectedDate] = useState(getDate());\n\tconst [calendarDate, setCalendarDate] = useState(new Date());\n\tconst [pieChartData, setPieChartData] = useState(data);\n\tconst [barChartData, setBarChartData] = useState(barData);\n\n\tuseEffect(() => {\n\t\tsetSelectedDate(calendarDate);\n\t}, [calendarDate]);\n\n\treturn (\n\t\t<div style={{ width: \"100%\" }}>\n\t\t\t<Grid container cols={2} className={classes.root}>\n\t\t\t\t<Grid item cols={1} md={3}>\n\t\t\t\t\t<Calendar\n\t\t\t\t\t\tonChange={setCalendarDate}\n\t\t\t\t\t\tvalue={calendarDate}\n\t\t\t\t\t\tminDetail=\"year\"\n\t\t\t\t\t\tclassName={classes.calendar}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Doughnut data={pieChartData} width={200} height={200} />\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item cols={1} md={8} className={classes.rightGridItem}>\n\t\t\t\t\t<Typography variant=\"h3\">Weekly Data</Typography>\n\t\t\t\t\t<ButtonGroup\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\taria-label=\"outlined primary button group\"\n\t\t\t\t\t\tclassName={classes.buttonGroup}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button className={classes.button}>Carbohydrates</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Fat</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Protein</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t<Bar data={barChartData} className={classes.barChart} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default TrackerPage;\n"]},"metadata":{},"sourceType":"module"}