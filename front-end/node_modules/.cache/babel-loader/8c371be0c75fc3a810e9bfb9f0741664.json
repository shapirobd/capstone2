{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/user/SignUpPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useStyles } from \"./styles/SignUpPageStyles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../actionCreators/userActionCreators\";\nimport { getStepContent, getSteps } from \"../../helpers/signUpHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const INITIAL_FORM_DATA = {\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    weight: null,\n    weight_goal: null,\n    calorie_goal: null\n  };\n  const [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(formData => ({ ...formData,\n      [name]: name === \"weight\" || name === \"weight_goal\" || name === \"calorie_goal\" ? +value : value\n    }));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(\"1:\", formData);\n    dispatch(register(formData));\n    history.push(\"/\");\n  };\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = (formData, missingData) => {\n    let dataMissing = false;\n    Object.keys(missingData).map(fieldName => {\n      if (formData[fieldName] === \"\") {\n        dataMissing = true;\n        missingData[fieldName] = true;\n      }\n    });\n    if (dataMissing) return;\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      style: {\n        backgroundColor: \"rgba(0,0,0,0)\"\n      },\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {\n          color: \"#fff\"\n        };\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 8\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep, handleChange, handleSubmit, formData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 8\n          }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSkip,\n            className: `${classes.button} ${classes.skipButton}`,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: activeStep === steps.length - 1 ? handleSubmit : handleNext,\n            className: `${classes.button} ${classes.nextButton}`,\n            children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SignUpPage, \"vSvmYKbb7T+0r/DpNY4BZQXivco=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = SignUpPage;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/user/SignUpPage.js"],"names":["React","useState","useStyles","Stepper","Step","StepLabel","Button","Typography","useHistory","useDispatch","register","getStepContent","getSteps","SignUpPage","classes","activeStep","setActiveStep","skipped","setSkipped","Set","steps","history","dispatch","INITIAL_FORM_DATA","first_name","last_name","username","email","password","weight","weight_goal","calorie_goal","formData","setFormData","handleChange","evt","name","value","target","handleSubmit","preventDefault","console","log","push","isStepOptional","step","isStepSkipped","has","handleNext","missingData","dataMissing","Object","keys","map","fieldName","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","root","backgroundColor","label","index","stepProps","labelProps","color","optional","completed","length","instructions","button","skipButton","nextButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,yCAAzB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,6BAAzC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BhB,KAAK,CAACC,QAAN,CAAe,CAAf,CAApC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBlB,KAAK,CAACC,QAAN,CAAe,IAAIkB,GAAJ,EAAf,CAA9B;AACA,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAMS,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,iBAAiB,GAAG;AACzBC,IAAAA,UAAU,EAAE,EADa;AAEzBC,IAAAA,SAAS,EAAE,EAFc;AAGzBC,IAAAA,QAAQ,EAAE,EAHe;AAIzBC,IAAAA,KAAK,EAAE,EAJkB;AAKzBC,IAAAA,QAAQ,EAAE,EALe;AAMzBC,IAAAA,MAAM,EAAE,IANiB;AAOzBC,IAAAA,WAAW,EAAE,IAPY;AAQzBC,IAAAA,YAAY,EAAE;AARW,GAA1B;AAUA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAACsB,iBAAD,CAAxC;;AAEA,QAAMW,YAAY,GAAIC,GAAD,IAAS;AAC7B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,GAAG,CAACG,MAA5B;AACAL,IAAAA,WAAW,CAAED,QAAD,KAAe,EAC1B,GAAGA,QADuB;AAE1B,OAACI,IAAD,GACCA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,aAA9B,IAA+CA,IAAI,KAAK,cAAxD,GACG,CAACC,KADJ,GAEGA;AALsB,KAAf,CAAD,CAAX;AAOA,GATD;;AAWA,QAAME,YAAY,GAAIJ,GAAD,IAAS;AAC7BA,IAAAA,GAAG,CAACK,cAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBV,QAAlB;AACAV,IAAAA,QAAQ,CAACZ,QAAQ,CAACsB,QAAD,CAAT,CAAR;AACAX,IAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACA,GALD;;AAOA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAChC,WAAOA,IAAI,KAAK,CAAhB;AACA,GAFD;;AAIA,QAAMC,aAAa,GAAID,IAAD,IAAU;AAC/B,WAAO5B,OAAO,CAAC8B,GAAR,CAAYF,IAAZ,CAAP;AACA,GAFD;;AAIA,QAAMG,UAAU,GAAG,CAAChB,QAAD,EAAWiB,WAAX,KAA2B;AAC7C,QAAIC,WAAW,GAAG,KAAlB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,SAAD,IAAe;AAC3C,UAAItB,QAAQ,CAACsB,SAAD,CAAR,KAAwB,EAA5B,EAAgC;AAC/BJ,QAAAA,WAAW,GAAG,IAAd;AACAD,QAAAA,WAAW,CAACK,SAAD,CAAX,GAAyB,IAAzB;AACA;AACD,KALD;AAMA,QAAIJ,WAAJ,EAAiB;AAEjB,QAAIK,UAAU,GAAGtC,OAAjB;;AACA,QAAI6B,aAAa,CAAC/B,UAAD,CAAjB,EAA+B;AAC9BwC,MAAAA,UAAU,GAAG,IAAIpC,GAAJ,CAAQoC,UAAU,CAACC,MAAX,EAAR,CAAb;AACAD,MAAAA,UAAU,CAACE,MAAX,CAAkB1C,UAAlB;AACA;;AAEDC,IAAAA,aAAa,CAAE0C,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACAxC,IAAAA,UAAU,CAACqC,UAAD,CAAV;AACA,GAlBD;;AAoBA,QAAMI,UAAU,GAAG,MAAM;AACxB3C,IAAAA,aAAa,CAAE0C,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACA,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACxB,QAAI,CAAChB,cAAc,CAAC7B,UAAD,CAAnB,EAAiC;AAChC,YAAM,IAAI8C,KAAJ,CAAU,4CAAV,CAAN;AACA;;AAED7C,IAAAA,aAAa,CAAE0C,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACAxC,IAAAA,UAAU,CAAE4C,WAAD,IAAiB;AAC3B,YAAMP,UAAU,GAAG,IAAIpC,GAAJ,CAAQ2C,WAAW,CAACN,MAAZ,EAAR,CAAnB;AACAD,MAAAA,UAAU,CAACQ,GAAX,CAAehD,UAAf;AACA,aAAOwC,UAAP;AACA,KAJS,CAAV;AAKA,GAXD;;AAaA,QAAMS,WAAW,GAAG,MAAM;AACzBhD,IAAAA,aAAa,CAAC,CAAD,CAAb;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACmD,IAAxB;AAAA,4BACC,QAAC,OAAD;AACC,MAAA,UAAU,EAAElD,UADb;AAEC,MAAA,KAAK,EAAE;AAAEmD,QAAAA,eAAe,EAAE;AAAnB,OAFR;AAAA,gBAIE9C,KAAK,CAACiC,GAAN,CAAU,CAACc,KAAD,EAAQC,KAAR,KAAkB;AAC5B,cAAMC,SAAS,GAAG,EAAlB;AACA,cAAMC,UAAU,GAAG;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAnB;;AACA,YAAI3B,cAAc,CAACwB,KAAD,CAAlB,EAA2B;AAC1BE,UAAAA,UAAU,CAACE,QAAX,gBACC,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AAGA;;AACD,YAAI1B,aAAa,CAACsB,KAAD,CAAjB,EAA0B;AACzBC,UAAAA,SAAS,CAACI,SAAV,GAAsB,KAAtB;AACA;;AACD,4BACC,QAAC,IAAD,OAAsBJ,SAAtB;AAAA,iCACC,QAAC,SAAD,OAAeC,UAAf;AAAA,sBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA;AADD,WAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA,OAhBA;AAJF;AAAA;AAAA;AAAA;AAAA,YADD,eAuBC;AAAA,gBACEpD,UAAU,KAAKK,KAAK,CAACsD,MAArB,gBACA;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,SAAS,EAAE5D,OAAO,CAAC6D,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEX,WAAjB;AAA8B,UAAA,SAAS,EAAElD,OAAO,CAAC8D,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAUA;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,SAAS,EAAE9D,OAAO,CAAC6D,YAA/B;AAAA,oBACEhE,cAAc,CAACI,UAAD,EAAamB,YAAb,EAA2BK,YAA3B,EAAyCP,QAAzC;AADhB;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAA,kCACC,QAAC,MAAD;AACC,YAAA,QAAQ,EAAEjB,UAAU,KAAK,CAD1B;AAEC,YAAA,OAAO,EAAE4C,UAFV;AAGC,YAAA,SAAS,EAAE7C,OAAO,CAAC8D,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAQEhC,cAAc,CAAC7B,UAAD,CAAd,iBACA,QAAC,MAAD;AACC,YAAA,OAAO,EAAC,WADT;AAEC,YAAA,KAAK,EAAC,SAFP;AAGC,YAAA,OAAO,EAAE6C,UAHV;AAIC,YAAA,SAAS,EAAG,GAAE9C,OAAO,CAAC8D,MAAO,IAAG9D,OAAO,CAAC+D,UAAW,EAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAmBC,QAAC,MAAD;AACC,YAAA,OAAO,EAAC,WADT;AAEC,YAAA,KAAK,EAAC,SAFP;AAGC,YAAA,OAAO,EACN9D,UAAU,KAAKK,KAAK,CAACsD,MAAN,GAAe,CAA9B,GAAkCnC,YAAlC,GAAiDS,UAJnD;AAMC,YAAA,SAAS,EAAG,GAAElC,OAAO,CAAC8D,MAAO,IAAG9D,OAAO,CAACgE,UAAW,EANpD;AAAA,sBAQE/D,UAAU,KAAKK,KAAK,CAACsD,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C;AAR/C;AAAA;AAAA;AAAA;AAAA,kBAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,YAvBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0EA,CAnKD;;GAAM7D,U;UACWX,S,EAMAM,U,EACCC,W;;;KARZI,U;AAqKN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useStyles } from \"./styles/SignUpPageStyles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../actionCreators/userActionCreators\";\nimport { getStepContent, getSteps } from \"../../helpers/signUpHelpers\";\n\nconst SignUpPage = () => {\n\tconst classes = useStyles();\n\n\tconst [activeStep, setActiveStep] = React.useState(0);\n\tconst [skipped, setSkipped] = React.useState(new Set());\n\tconst steps = getSteps();\n\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\tconst INITIAL_FORM_DATA = {\n\t\tfirst_name: \"\",\n\t\tlast_name: \"\",\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tweight: null,\n\t\tweight_goal: null,\n\t\tcalorie_goal: null,\n\t};\n\tconst [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\t\tsetFormData((formData) => ({\n\t\t\t...formData,\n\t\t\t[name]:\n\t\t\t\tname === \"weight\" || name === \"weight_goal\" || name === \"calorie_goal\"\n\t\t\t\t\t? +value\n\t\t\t\t\t: value,\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log(\"1:\", formData);\n\t\tdispatch(register(formData));\n\t\thistory.push(\"/\");\n\t};\n\n\tconst isStepOptional = (step) => {\n\t\treturn step === 1;\n\t};\n\n\tconst isStepSkipped = (step) => {\n\t\treturn skipped.has(step);\n\t};\n\n\tconst handleNext = (formData, missingData) => {\n\t\tlet dataMissing = false;\n\t\tObject.keys(missingData).map((fieldName) => {\n\t\t\tif (formData[fieldName] === \"\") {\n\t\t\t\tdataMissing = true;\n\t\t\t\tmissingData[fieldName] = true;\n\t\t\t}\n\t\t});\n\t\tif (dataMissing) return;\n\n\t\tlet newSkipped = skipped;\n\t\tif (isStepSkipped(activeStep)) {\n\t\t\tnewSkipped = new Set(newSkipped.values());\n\t\t\tnewSkipped.delete(activeStep);\n\t\t}\n\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\n\t\tsetSkipped(newSkipped);\n\t};\n\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep - 1);\n\t};\n\n\tconst handleSkip = () => {\n\t\tif (!isStepOptional(activeStep)) {\n\t\t\tthrow new Error(\"You can't skip a step that isn't optional.\");\n\t\t}\n\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\n\t\tsetSkipped((prevSkipped) => {\n\t\t\tconst newSkipped = new Set(prevSkipped.values());\n\t\t\tnewSkipped.add(activeStep);\n\t\t\treturn newSkipped;\n\t\t});\n\t};\n\n\tconst handleReset = () => {\n\t\tsetActiveStep(0);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Stepper\n\t\t\t\tactiveStep={activeStep}\n\t\t\t\tstyle={{ backgroundColor: \"rgba(0,0,0,0)\" }}\n\t\t\t>\n\t\t\t\t{steps.map((label, index) => {\n\t\t\t\t\tconst stepProps = {};\n\t\t\t\t\tconst labelProps = { color: \"#fff\" };\n\t\t\t\t\tif (isStepOptional(index)) {\n\t\t\t\t\t\tlabelProps.optional = (\n\t\t\t\t\t\t\t<Typography variant=\"caption\">Optional</Typography>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (isStepSkipped(index)) {\n\t\t\t\t\t\tstepProps.completed = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Step key={label} {...stepProps}>\n\t\t\t\t\t\t\t<StepLabel {...labelProps}>{label}</StepLabel>\n\t\t\t\t\t\t</Step>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Stepper>\n\t\t\t<div>\n\t\t\t\t{activeStep === steps.length ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Typography className={classes.instructions}>\n\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Button onClick={handleReset} className={classes.button}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Typography className={classes.instructions}>\n\t\t\t\t\t\t\t{getStepContent(activeStep, handleChange, handleSubmit, formData)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\t\tonClick={handleBack}\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{isStepOptional(activeStep) && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={handleSkip}\n\t\t\t\t\t\t\t\t\tclassName={`${classes.button} ${classes.skipButton}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSkip\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\tactiveStep === steps.length - 1 ? handleSubmit : handleNext\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={`${classes.button} ${classes.nextButton}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}