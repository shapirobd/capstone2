{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertDate = (date = new Date()) => {\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = date.getFullYear();\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst getDailyMacros = (carbs = 0, fat = 0, protein = 0) => ({\n  labels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n  datasets: [{\n    // label: \"Fat\",\n    data: [carbs, fat, protein],\n    backgroundColor: [\"red\", \"green\", \"blue\"]\n  }]\n});\n\nconst getWeekNumber = calendarDate => {\n  return moment(convertDate(calendarDate), \"YYYY-MM-DD\").week();\n};\n\nconst getWeekDates = calendarDate => {\n  return [0, 1, 2, 3, 4, 5, 6].map(d => convertDate(moment(`${convertDate(calendarDate).substring(0, 4)}-${getWeekNumber(calendarDate)}-` + d, \"YYYY-w-e\")[\"_d\"]));\n};\n\nconst TrackerPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user); // const [selectedDate, setSelectedDate] = useState(findDate());\n\n  const [calendarDate, setCalendarDate] = useState(new Date());\n  const [dayState, setDayState] = useState({\n    date: convertDate(calendarDate),\n    macros: {\n      carbs: 100,\n      fat: 90,\n      protein: 150\n    }\n  });\n  const [weekState, setWeekState] = useState({\n    weekNumber: null,\n    dates: getWeekDates(calendarDate),\n    weekData: {}\n  });\n\n  const getWeeklyMacros = () => {\n    console.log(Object.keys(weekState.weekData).map(date => date));\n    return {\n      labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      datasets: [{\n        label: \"Carbohydrates\",\n        // data: [120, 140, 130, 90, 200, 150, 110],\n        data: weekState.weekData ? Object.keys(weekState.weekData).map(date => date.carbs) : [0, 0, 0, 0, 0, 0, 0],\n        backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n      }, {\n        label: \"Fat\",\n        data: weekState.weekData ? Object.keys(weekState.weekData).map(date => date.fat) : [0, 0, 0, 0, 0, 0, 0],\n        backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n      }, {\n        label: \"Protein\",\n        data: weekState.weekData ? Object.keys(weekState.weekData).map(date => date.protein) : [0, 0, 0, 0, 0, 0, 0],\n        backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n      }]\n    };\n  };\n\n  const [pieChartData, setPieChartData] = useState(getDailyMacros());\n  const [barChartData, setBarChartData] = useState(getWeeklyMacros());\n\n  const getDateMacros = async (context = \"day\", date = calendarDate) => {\n    const mealIds = await axios.get(`http://localhost:5000/users/${user.username}/getEatenMeals`, {\n      params: {\n        date: context === \"day\" ? convertDate(date) : date\n      }\n    });\n    const meals = await axios.get(`https://api.spoonacular.com/recipes/informationBulk`, {\n      params: {\n        apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n        ids: mealIds.data.join(\",\"),\n        includeNutrition: true\n      }\n    });\n    const macros = {\n      carbs: meals.data.reduce((totalCarbs, meal) => {\n        return Math.round(totalCarbs + meal.nutrition.nutrients[3].amount);\n      }, 0),\n      fat: meals.data.reduce((totalFat, meal) => {\n        return Math.round(totalFat + meal.nutrition.nutrients[1].amount);\n      }, 0),\n      protein: meals.data.reduce((totalProtein, meal) => {\n        return Math.round(totalProtein + meal.nutrition.nutrients[8].amount);\n      }, 0)\n    };\n\n    if (context === \"day\") {\n      setDayState({\n        date: convertDate(date),\n        macros\n      });\n    } else {\n      return macros;\n    }\n  };\n\n  const updateWeekData = async (weekData, date) => {\n    const dateMacros = await getDateMacros(\"week\", date);\n    weekData[date] = dateMacros;\n  };\n\n  const getWeekMacros = async weekDates => {\n    let weekData = {};\n\n    for (let date of weekDates) {\n      await updateWeekData(weekData, date);\n    }\n\n    setWeekState(weekState => ({ ...weekState,\n      weekData\n    }));\n  };\n\n  useEffect(() => {\n    getDateMacros();\n\n    if (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n      setWeekState({\n        weekNumber: getWeekNumber(calendarDate),\n        dates: getWeekDates(calendarDate),\n        weekData: getWeekMacros(getWeekDates(calendarDate))\n      });\n    }\n  }, [calendarDate]);\n  useEffect(() => {\n    setPieChartData(getDailyMacros(dayState.macros.carbs, dayState.macros.fat, dayState.macros.protein));\n  }, [dayState]);\n  useEffect(() => {\n    setBarChartData(getWeeklyMacros());\n  }, [weekState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [console.log(weekState), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 2,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setCalendarDate,\n          value: calendarDate,\n          minDetail: \"year\",\n          className: classes.calendar,\n          calendarType: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: pieChartData,\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 8,\n        className: classes.rightGridItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Weekly Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          color: \"primary\",\n          \"aria-label\": \"outlined primary button group\",\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Carbohydrates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData,\n          className: classes.barChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrackerPage, \"wtSs5gXDhxrdsXPWAVxIw/W5ROg=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TrackerPage;\nexport default TrackerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackerPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js"],"names":["React","useState","useEffect","useSelector","Grid","Typography","ButtonGroup","Button","useStyles","Doughnut","Bar","Calendar","moment","axios","convertDate","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","getDailyMacros","carbs","fat","protein","labels","datasets","data","backgroundColor","getWeekNumber","calendarDate","week","getWeekDates","map","d","substring","TrackerPage","classes","user","state","setCalendarDate","dayState","setDayState","macros","weekState","setWeekState","weekNumber","dates","weekData","getWeeklyMacros","console","log","Object","keys","label","pieChartData","setPieChartData","barChartData","setBarChartData","getDateMacros","context","mealIds","get","username","params","meals","apiKey","ids","join","includeNutrition","reduce","totalCarbs","meal","Math","round","nutrition","nutrients","amount","totalFat","totalProtein","updateWeekData","dateMacros","getWeekMacros","weekDates","width","root","calendar","rightGridItem","buttonGroup","button","barChart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\n\nconst convertDate = (date = new Date()) => {\n\tlet dd = String(date.getDate()).padStart(2, \"0\");\n\tlet mm = String(date.getMonth() + 1).padStart(2, \"0\");\n\tlet yyyy = date.getFullYear();\n\treturn yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst getDailyMacros = (carbs = 0, fat = 0, protein = 0) => ({\n\tlabels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n\tdatasets: [\n\t\t{\n\t\t\t// label: \"Fat\",\n\t\t\tdata: [carbs, fat, protein],\n\t\t\tbackgroundColor: [\"red\", \"green\", \"blue\"],\n\t\t},\n\t],\n});\n\nconst getWeekNumber = (calendarDate) => {\n\treturn moment(convertDate(calendarDate), \"YYYY-MM-DD\").week();\n};\n\nconst getWeekDates = (calendarDate) => {\n\treturn [0, 1, 2, 3, 4, 5, 6].map((d) =>\n\t\tconvertDate(\n\t\t\tmoment(\n\t\t\t\t`${convertDate(calendarDate).substring(0, 4)}-${getWeekNumber(\n\t\t\t\t\tcalendarDate\n\t\t\t\t)}-` + d,\n\t\t\t\t\"YYYY-w-e\"\n\t\t\t)[\"_d\"]\n\t\t)\n\t);\n};\n\nconst TrackerPage = () => {\n\tconst classes = useStyles();\n\tconst user = useSelector((state) => state.user);\n\t// const [selectedDate, setSelectedDate] = useState(findDate());\n\tconst [calendarDate, setCalendarDate] = useState(new Date());\n\tconst [dayState, setDayState] = useState({\n\t\tdate: convertDate(calendarDate),\n\t\tmacros: {\n\t\t\tcarbs: 100,\n\t\t\tfat: 90,\n\t\t\tprotein: 150,\n\t\t},\n\t});\n\tconst [weekState, setWeekState] = useState({\n\t\tweekNumber: null,\n\t\tdates: getWeekDates(calendarDate),\n\t\tweekData: {},\n\t});\n\n\tconst getWeeklyMacros = () => {\n\t\tconsole.log(Object.keys(weekState.weekData).map((date) => date));\n\t\treturn {\n\t\t\tlabels: [\n\t\t\t\t\"Sunday\",\n\t\t\t\t\"Monday\",\n\t\t\t\t\"Tuesday\",\n\t\t\t\t\"Wednesday\",\n\t\t\t\t\"Thursday\",\n\t\t\t\t\"Friday\",\n\t\t\t\t\"Saturday\",\n\t\t\t],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Carbohydrates\",\n\t\t\t\t\t// data: [120, 140, 130, 90, 200, 150, 110],\n\t\t\t\t\tdata: weekState.weekData\n\t\t\t\t\t\t? Object.keys(weekState.weekData).map((date) => date.carbs)\n\t\t\t\t\t\t: [0, 0, 0, 0, 0, 0, 0],\n\t\t\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Fat\",\n\t\t\t\t\tdata: weekState.weekData\n\t\t\t\t\t\t? Object.keys(weekState.weekData).map((date) => date.fat)\n\t\t\t\t\t\t: [0, 0, 0, 0, 0, 0, 0],\n\t\t\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Protein\",\n\t\t\t\t\tdata: weekState.weekData\n\t\t\t\t\t\t? Object.keys(weekState.weekData).map((date) => date.protein)\n\t\t\t\t\t\t: [0, 0, 0, 0, 0, 0, 0],\n\t\t\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\n\tconst [pieChartData, setPieChartData] = useState(getDailyMacros());\n\tconst [barChartData, setBarChartData] = useState(getWeeklyMacros());\n\n\tconst getDateMacros = async (context = \"day\", date = calendarDate) => {\n\t\tconst mealIds = await axios.get(\n\t\t\t`http://localhost:5000/users/${user.username}/getEatenMeals`,\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tdate: context === \"day\" ? convertDate(date) : date,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tconst meals = await axios.get(\n\t\t\t`https://api.spoonacular.com/recipes/informationBulk`,\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\t\tids: mealIds.data.join(\",\"),\n\t\t\t\t\tincludeNutrition: true,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\n\t\tconst macros = {\n\t\t\tcarbs: meals.data.reduce((totalCarbs, meal) => {\n\t\t\t\treturn Math.round(totalCarbs + meal.nutrition.nutrients[3].amount);\n\t\t\t}, 0),\n\t\t\tfat: meals.data.reduce((totalFat, meal) => {\n\t\t\t\treturn Math.round(totalFat + meal.nutrition.nutrients[1].amount);\n\t\t\t}, 0),\n\t\t\tprotein: meals.data.reduce((totalProtein, meal) => {\n\t\t\t\treturn Math.round(totalProtein + meal.nutrition.nutrients[8].amount);\n\t\t\t}, 0),\n\t\t};\n\t\tif (context === \"day\") {\n\t\t\tsetDayState({\n\t\t\t\tdate: convertDate(date),\n\t\t\t\tmacros,\n\t\t\t});\n\t\t} else {\n\t\t\treturn macros;\n\t\t}\n\t};\n\n\tconst updateWeekData = async (weekData, date) => {\n\t\tconst dateMacros = await getDateMacros(\"week\", date);\n\t\tweekData[date] = dateMacros;\n\t};\n\n\tconst getWeekMacros = async (weekDates) => {\n\t\tlet weekData = {};\n\t\tfor (let date of weekDates) {\n\t\t\tawait updateWeekData(weekData, date);\n\t\t}\n\t\tsetWeekState((weekState) => ({\n\t\t\t...weekState,\n\t\t\tweekData,\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tgetDateMacros();\n\t\tif (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n\t\t\tsetWeekState({\n\t\t\t\tweekNumber: getWeekNumber(calendarDate),\n\t\t\t\tdates: getWeekDates(calendarDate),\n\t\t\t\tweekData: getWeekMacros(getWeekDates(calendarDate)),\n\t\t\t});\n\t\t}\n\t}, [calendarDate]);\n\n\tuseEffect(() => {\n\t\tsetPieChartData(\n\t\t\tgetDailyMacros(\n\t\t\t\tdayState.macros.carbs,\n\t\t\t\tdayState.macros.fat,\n\t\t\t\tdayState.macros.protein\n\t\t\t)\n\t\t);\n\t}, [dayState]);\n\n\tuseEffect(() => {\n\t\tsetBarChartData(getWeeklyMacros());\n\t}, [weekState]);\n\n\treturn (\n\t\t<div style={{ width: \"100%\" }}>\n\t\t\t{console.log(weekState)}\n\t\t\t<Grid container cols={2} className={classes.root}>\n\t\t\t\t<Grid item cols={1} md={3}>\n\t\t\t\t\t<Calendar\n\t\t\t\t\t\tonChange={setCalendarDate}\n\t\t\t\t\t\tvalue={calendarDate}\n\t\t\t\t\t\tminDetail=\"year\"\n\t\t\t\t\t\tclassName={classes.calendar}\n\t\t\t\t\t\tcalendarType=\"US\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Doughnut data={pieChartData} width={200} height={200} />\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item cols={1} md={8} className={classes.rightGridItem}>\n\t\t\t\t\t<Typography variant=\"h3\">Weekly Data</Typography>\n\t\t\t\t\t<ButtonGroup\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\taria-label=\"outlined primary button group\"\n\t\t\t\t\t\tclassName={classes.buttonGroup}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button className={classes.button}>Carbohydrates</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Fat</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Protein</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t<Bar data={barChartData} className={classes.barChart} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default TrackerPage;\n"]},"metadata":{},"sourceType":"module"}