{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { loadFeed } from \"./actionCreators\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport RecipeGrid from \"./RecipeGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\"\n  },\n  gridList: {\n    width: \"75%\"\n  }\n}));\n\nconst HomePage = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const feed = useSelector(state => state.feed, shallowEqual);\n  const page = useSelector(state => state.page, shallowEqual);\n  console.log(feed);\n  useEffect(() => {\n    dispatch(loadFeed(page));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(RecipeGrid, {\n        feed: feed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(HomePage, \"w/zat/bpXYQ5fIog3ufJ0oo7gWM=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/HomePage.js"],"names":["React","useEffect","GridList","GridListTile","GridListTileBar","makeStyles","loadFeed","useDispatch","useSelector","shallowEqual","RecipeGrid","useStyles","root","display","flexWrap","justifyContent","overflow","gridList","width","HomePage","classes","dispatch","feed","state","page","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,eAAjC,QAAwD,mBAAxD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC,OAAO;AACnCO,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,cAAc,EAAE,cAHX;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAD6B;AAOnCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE;AAPyB,CAAP,CAAD,CAA5B;;AAYA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAMe,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,IAAlB,EAAwBb,YAAxB,CAAxB;AACA,QAAMe,IAAI,GAAGhB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,IAAlB,EAAwBf,YAAxB,CAAxB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACArB,EAAAA,SAAS,CAAC,MAAM;AACfoB,IAAAA,QAAQ,CAACf,QAAQ,CAACkB,IAAD,CAAT,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACR,IAAxB;AAAA,6BACC,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEU;AAAlB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAOA,CAlBD;;GAAMH,Q;UACWR,S,EACCJ,W,EAEJC,W,EACAA,W;;;KALRW,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { loadFeed } from \"./actionCreators\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport RecipeGrid from \"./RecipeGrid\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tjustifyContent: \"space-around\",\n\t\toverflow: \"hidden\",\n\t},\n\tgridList: {\n\t\twidth: \"75%\",\n\t},\n}));\n\nconst HomePage = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst feed = useSelector((state) => state.feed, shallowEqual);\n\tconst page = useSelector((state) => state.page, shallowEqual);\n\tconsole.log(feed);\n\tuseEffect(() => {\n\t\tdispatch(loadFeed(page));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<RecipeGrid feed={feed} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}