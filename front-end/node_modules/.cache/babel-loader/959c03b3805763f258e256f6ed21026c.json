{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/FilterPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_DIETS = [\"gluten free\", \"ketogenic\", \"vegetarian\", \"lacto vegetarian\", \"ovo vegetarian\", \"lacto ovo vegetarian\", \"vegan\", \"pescetarian\", \"paleo\", \"primal\", \"whole30\"];\nconst ALL_MACROS = [\"Fat\", \"Protein\", \"Carbohydrates\"];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    margin: \"0 0 10px 0\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"2px 2px 3px lightgray\",\n    maxHeight: \"40vh\"\n  },\n  list: {\n    columnCount: 2\n  },\n  listTitle: {\n    width: \"100%\"\n  },\n  checkbox: {\n    padding: 0\n  }\n}));\n\nconst FilterPanel = () => {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      className: classes.list,\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.listTitle,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Diets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), ALL_DIETS.map((diet, idx) => {\n        const labelId = `checkbox-list-label-${idx}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true // button\n          ,\n          onClick: handleToggle(diet),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(diet) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                \"aria-labelledby\": labelId\n              },\n              className: classes.checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: diet.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this)]\n        }, diet, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Macros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), ALL_MACROS.map((macro, idx) => {\n        const labelId = `checkbox-list-label-${idx}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true // button\n          ,\n          onClick: handleToggle(macro),\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            label: macro,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 8\n          }, this)\n        }, macro, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FilterPanel, \"0o+c9wVIlrEVOlS08q2btRlaiSQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterPanel;\nexport default FilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/FilterPanel.js"],"names":["React","Checkbox","makeStyles","Drawer","CssBaseline","Toolbar","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Typography","TextField","ALL_DIETS","ALL_MACROS","useStyles","theme","root","display","flexWrap","margin","justifyContent","backgroundColor","boxShadow","maxHeight","list","columnCount","listTitle","width","checkbox","padding","FilterPanel","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","diet","idx","labelId","undefined","toUpperCase","macro"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { Typography, TextField } from \"@material-ui/core\";\n\nconst ALL_DIETS = [\n\t\"gluten free\",\n\t\"ketogenic\",\n\t\"vegetarian\",\n\t\"lacto vegetarian\",\n\t\"ovo vegetarian\",\n\t\"lacto ovo vegetarian\",\n\t\"vegan\",\n\t\"pescetarian\",\n\t\"paleo\",\n\t\"primal\",\n\t\"whole30\",\n];\n\nconst ALL_MACROS = [\"Fat\", \"Protein\", \"Carbohydrates\"];\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tmargin: \"0 0 10px 0\",\n\t\tjustifyContent: \"center\",\n\t\tbackgroundColor: \"#fff\",\n\t\tboxShadow: \"2px 2px 3px lightgray\",\n\t\tmaxHeight: \"40vh\",\n\t},\n\tlist: {\n\t\tcolumnCount: 2,\n\t},\n\tlistTitle: {\n\t\twidth: \"100%\",\n\t},\n\tcheckbox: {\n\t\tpadding: 0,\n\t},\n}));\n\nconst FilterPanel = () => {\n\tconst classes = useStyles();\n\n\tconst [checked, setChecked] = React.useState([0]);\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetChecked(newChecked);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<List className={classes.list}>\n\t\t\t\t<ListItem className={classes.listTitle}>\n\t\t\t\t\t<Typography>Diets</Typography>\n\t\t\t\t</ListItem>\n\t\t\t\t{ALL_DIETS.map((diet, idx) => {\n\t\t\t\t\tconst labelId = `checkbox-list-label-${idx}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={diet}\n\t\t\t\t\t\t\trole={undefined}\n\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t// button\n\t\t\t\t\t\t\tonClick={handleToggle(diet)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\t\tchecked={checked.indexOf(diet) !== -1}\n\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t\t\tclassName={classes.checkbox}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText id={labelId} primary={diet.toUpperCase()} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t\t<List>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<Typography>Macros</Typography>\n\t\t\t\t</ListItem>\n\t\t\t\t{ALL_MACROS.map((macro, idx) => {\n\t\t\t\t\tconst labelId = `checkbox-list-label-${idx}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={macro}\n\t\t\t\t\t\t\trole={undefined}\n\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t// button\n\t\t\t\t\t\t\tonClick={handleToggle(macro)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* <ListItemText id={labelId} primary={macro.toUpperCase()} /> */}\n\t\t\t\t\t\t\t<TextField size=\"small\" label={macro} variant=\"outlined\" />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</div>\n\t);\n};\n\nexport default FilterPanel;\n"]},"metadata":{},"sourceType":"module"}