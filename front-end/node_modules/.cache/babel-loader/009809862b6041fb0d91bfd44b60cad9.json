{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/home/FilterPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Typography, TextField, FormControl, Grid, Button } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MacroInputs from \"./MacroInputs\";\nimport DietInputs from \"./DietInputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_DIETS = [\"gluten free\", \"ketogenic\", \"vegetarian\", \"lacto vegetarian\", \"ovo vegetarian\", \"lacto ovo vegetarian\", \"vegan\", \"pescetarian\", \"paleo\", \"primal\", \"whole30\"];\nconst ALL_MACROS = [\"Fat\", \"Protein\", \"Carbohydrates\"];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    backgroundImage: \"linear-gradient(#c8e6c9, #fff)\",\n    flexWrap: \"wrap\",\n    margin: \"0 0 10px 0\",\n    padding: \"20px\",\n    justifyContent: \"left\",\n    boxShadow: \"2px 2px 3px lightgray\",\n    maxHeight: \"40vh\"\n  },\n  button: {\n    float: \"right\"\n  }\n}));\n\nconst FilterPanel = () => {\n  _s();\n\n  const classes = useStyles();\n  const INITIAL_FORM_DATA = {\n    diets: [],\n    macros: {\n      fat: {\n        operator: null,\n        amount: null\n      },\n      protein: {\n        operator: null,\n        amount: null\n      },\n      carbohydrates: {\n        operator: null,\n        amount: null\n      }\n    }\n  };\n  const [checked, setChecked] = React.useState([0]);\n  const [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target; // setFormData((formData) => {\n    // \tif (name !==)\n    // })\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(\"FORM SUBMITTED\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(DietInputs, {\n      allDiets: ALL_DIETS,\n      handleChange: handleChange,\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MacroInputs, {\n      allMacros: ALL_MACROS,\n      handleChange: handleChange,\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: classes.button,\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FilterPanel, \"gPJsrCL+f2RMt0R9e/dmch89LzY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterPanel;\nexport default FilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/home/FilterPanel.js"],"names":["React","Checkbox","makeStyles","List","ListItem","ListItemIcon","ListItemText","Typography","TextField","FormControl","Grid","Button","Select","MacroInputs","DietInputs","ALL_DIETS","ALL_MACROS","useStyles","theme","root","display","backgroundImage","flexWrap","margin","padding","justifyContent","boxShadow","maxHeight","button","float","FilterPanel","classes","INITIAL_FORM_DATA","diets","macros","fat","operator","amount","protein","carbohydrates","checked","setChecked","useState","formData","setFormData","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleChange","evt","name","target","handleSubmit","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n\tTypography,\n\tTextField,\n\tFormControl,\n\tGrid,\n\tButton,\n} from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MacroInputs from \"./MacroInputs\";\nimport DietInputs from \"./DietInputs\";\n\nconst ALL_DIETS = [\n\t\"gluten free\",\n\t\"ketogenic\",\n\t\"vegetarian\",\n\t\"lacto vegetarian\",\n\t\"ovo vegetarian\",\n\t\"lacto ovo vegetarian\",\n\t\"vegan\",\n\t\"pescetarian\",\n\t\"paleo\",\n\t\"primal\",\n\t\"whole30\",\n];\n\nconst ALL_MACROS = [\"Fat\", \"Protein\", \"Carbohydrates\"];\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tbackgroundImage: \"linear-gradient(#c8e6c9, #fff)\",\n\t\tflexWrap: \"wrap\",\n\t\tmargin: \"0 0 10px 0\",\n\t\tpadding: \"20px\",\n\t\tjustifyContent: \"left\",\n\t\tboxShadow: \"2px 2px 3px lightgray\",\n\t\tmaxHeight: \"40vh\",\n\t},\n\tbutton: {\n\t\tfloat: \"right\",\n\t},\n}));\n\nconst FilterPanel = () => {\n\tconst classes = useStyles();\n\n\tconst INITIAL_FORM_DATA = {\n\t\tdiets: [],\n\t\tmacros: {\n\t\t\tfat: {\n\t\t\t\toperator: null,\n\t\t\t\tamount: null,\n\t\t\t},\n\t\t\tprotein: {\n\t\t\t\toperator: null,\n\t\t\t\tamount: null,\n\t\t\t},\n\t\t\tcarbohydrates: {\n\t\t\t\toperator: null,\n\t\t\t\tamount: null,\n\t\t\t},\n\t\t},\n\t};\n\n\tconst [checked, setChecked] = React.useState([0]);\n\tconst [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetChecked(newChecked);\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\t\t// setFormData((formData) => {\n\t\t// \tif (name !==)\n\t\t// })\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log(\"FORM SUBMITTED\");\n\t};\n\n\treturn (\n\t\t<form className={classes.root} onSubmit={handleSubmit}>\n\t\t\t<DietInputs\n\t\t\t\tallDiets={ALL_DIETS}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tformData={formData}\n\t\t\t/>\n\t\t\t<MacroInputs\n\t\t\t\tallMacros={ALL_MACROS}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tformData={formData}\n\t\t\t/>\n\t\t\t<Button type=\"submit\" className={classes.button}>\n\t\t\t\tApply\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport default FilterPanel;\n"]},"metadata":{},"sourceType":"module"}