{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/RecipeGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // const useStyles = makeStyles(() => ({\n// \tgridList: {\n// \t\twidth: \"75%\",\n// \t},\n// \tgridTile: {\n// \t\tmargin: \"20px 0\",\n// \t\theight: \"auto\",\n// \t},\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-end\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: \"100%\",\n    height: 450\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\n\nconst RecipeGrid = ({\n  feed\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cols: 4,\n      cellHeight: 180,\n      className: classes.gridList,\n      children: feed.map(recipe => /*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: recipe.title // subtitle={<span>by: {tile.author}</span>}\n          // actionIcon={\n          // <IconButton\n          // \taria-label={`info about ${tile.title}`}\n          // \tclassName={classes.icon}\n          // >\n          // \t<InfoIcon />\n          // </IconButton>\n          // }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RecipeGrid, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecipeGrid;\nexport default RecipeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/RecipeGrid.js"],"names":["React","Link","GridList","GridListTile","GridListTileBar","makeStyles","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","RecipeGrid","feed","classes","map","recipe","image","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,eAAjC,QAAwD,mBAAxD;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,cAAc,EAAE,UAHX;AAILC,IAAAA,QAAQ,EAAE,QAJL;AAKLC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALrC,GADkC;AAQxCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE;AAFC,GAR8B;AAYxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF;AAZkC,CAAZ,CAAD,CAA5B;;AAiBA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAmB,MAAA,UAAU,EAAE,GAA/B;AAAoC,MAAA,SAAS,EAAEgB,OAAO,CAACP,QAAvD;AAAA,gBAIEM,IAAI,CAACE,GAAL,CAAUC,MAAD,iBACT,QAAC,YAAD;AAA8B,QAAA,IAAI,EAAE,CAApC;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEA,MAAM,CAACC,KAAjB;AAAwB,UAAA,GAAG,EAAED,MAAM,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,eAAD;AACC,UAAA,KAAK,EAAEF,MAAM,CAACE,KADf,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA,SAAmBF,MAAM,CAACG,EAA1B;AAAA;AAAA;AAAA;AAAA,cADA;AAJF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA,CA7BD;;GAAMP,U;UACWhB,S;;;KADXgB,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// const useStyles = makeStyles(() => ({\n// \tgridList: {\n// \t\twidth: \"75%\",\n// \t},\n// \tgridTile: {\n// \t\tmargin: \"20px 0\",\n// \t\theight: \"auto\",\n// \t},\n// }));\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tjustifyContent: \"flex-end\",\n\t\toverflow: \"hidden\",\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n\tgridList: {\n\t\twidth: \"100%\",\n\t\theight: 450,\n\t},\n\ticon: {\n\t\tcolor: \"rgba(255, 255, 255, 0.54)\",\n\t},\n}));\n\nconst RecipeGrid = ({ feed }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<GridList cols={4} cellHeight={180} className={classes.gridList}>\n\t\t\t\t{/* <GridListTile key=\"Subheader\" cols={4} style={{ height: \"auto\" }}> */}\n\t\t\t\t{/* <ListSubheader component=\"div\">December</ListSubheader> */}\n\t\t\t\t{/* </GridListTile> */}\n\t\t\t\t{feed.map((recipe) => (\n\t\t\t\t\t<GridListTile key={recipe.id} cols={1}>\n\t\t\t\t\t\t<img src={recipe.image} alt={recipe.title} />\n\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\ttitle={recipe.title}\n\t\t\t\t\t\t\t// subtitle={<span>by: {tile.author}</span>}\n\t\t\t\t\t\t\t// actionIcon={\n\t\t\t\t\t\t\t// <IconButton\n\t\t\t\t\t\t\t// \taria-label={`info about ${tile.title}`}\n\t\t\t\t\t\t\t// \tclassName={classes.icon}\n\t\t\t\t\t\t\t// >\n\t\t\t\t\t\t\t// \t<InfoIcon />\n\t\t\t\t\t\t\t// </IconButton>\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t))}\n\t\t\t</GridList>\n\t\t</div>\n\t);\n};\n\nexport default RecipeGrid;\n"]},"metadata":{},"sourceType":"module"}