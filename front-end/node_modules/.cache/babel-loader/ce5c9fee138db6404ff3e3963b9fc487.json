{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/home/DietInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useStyles } from \"./styles/DietInputsStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DietInputs = ({\n  allDiets,\n  setFilterData,\n  setChecked,\n  checked,\n  mobile\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  useEffect(() => {\n    setFilterData(filterData => ({ ...filterData,\n      diets: checked\n    }));\n  }, [checked, setFilterData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      float: mobile ? \"none\" : \"left\",\n      width: mobile ? \"100%\" : \"50%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Diets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.list,\n      children: allDiets.map((diet, idx) => {\n        const labelId = `checkbox-list-label-${idx}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          dense: true,\n          onClick: handleToggle(diet),\n          className: classes.listItem,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(diet) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                \"aria-labelledby\": labelId\n              },\n              className: classes.checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: diet.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this)]\n        }, diet, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DietInputs, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = DietInputs;\nexport default DietInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"DietInputs\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/home/DietInputs.js"],"names":["React","useEffect","Checkbox","useStyles","List","ListItem","ListItemIcon","ListItemText","Typography","DietInputs","allDiets","setFilterData","setChecked","checked","mobile","classes","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","filterData","diets","float","width","height","list","map","diet","idx","labelId","listItem","checkbox","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useStyles } from \"./styles/DietInputsStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Typography } from \"@material-ui/core\";\n\nconst DietInputs = ({\n\tallDiets,\n\tsetFilterData,\n\tsetChecked,\n\tchecked,\n\tmobile,\n}) => {\n\tconst classes = useStyles();\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\t\tsetChecked(newChecked);\n\t};\n\n\tuseEffect(() => {\n\t\tsetFilterData((filterData) => ({\n\t\t\t...filterData,\n\t\t\tdiets: checked,\n\t\t}));\n\t}, [checked, setFilterData]);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tfloat: mobile ? \"none\" : \"left\",\n\t\t\t\twidth: mobile ? \"100%\" : \"50%\",\n\t\t\t\theight: \"100%\",\n\t\t\t}}\n\t\t>\n\t\t\t<Typography>Diets</Typography>\n\t\t\t<List className={classes.list}>\n\t\t\t\t{allDiets.map((diet, idx) => {\n\t\t\t\t\tconst labelId = `checkbox-list-label-${idx}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={diet}\n\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\tonClick={handleToggle(diet)}\n\t\t\t\t\t\t\tclassName={classes.listItem}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\t\tchecked={checked.indexOf(diet) !== -1}\n\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t\t\tclassName={classes.checkbox}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText id={labelId} primary={diet.toUpperCase()} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</div>\n\t);\n};\n\nexport default DietInputs;\n"]},"metadata":{},"sourceType":"module"}