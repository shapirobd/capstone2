{"ast":null,"code":"import axios from \"axios\";\nimport { LOAD_FEED, LOAD_RECIPE } from \"./actionTypes\";\nexport const loadFeed = page => {\n  return async dispatch => {\n    try {\n      const recipes = await axios.get(\"https://api.spoonacular.com/recipes/complexSearch\", {\n        params: {\n          apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n          offset: 30 * (page - 1),\n          number: 30\n        }\n      });\n      console.log(recipes.data);\n      dispatch(loadedFeed(recipes.data));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst loadedFeed = data => {\n  return {\n    type: LOAD_FEED,\n    payload: {\n      recipes: data.results,\n      totalResults: data.totalResults\n    }\n  };\n};\n\nexport const loadRecipe = recipeId => {\n  return async dispatch => {\n    try {\n      const recipe = await axios.get(`https://api.spoonacular.com/recipes/${recipeId}/information`, {\n        params: {\n          apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\"\n        }\n      });\n      const instructions = await axios.get(`https://api.spoonacular.com/recipes/{id}/analyzedInstructions`, {\n        params: {\n          stepBreakdown: true\n        }\n      });\n      dispatch(loadedRecipe(recipe.data, instructions.data));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst loadedRecipe = (recipe, instructions) => {\n  return {\n    type: LOAD_RECIPE,\n    payload: {\n      currentRecipe: {\n        recipe,\n        instructions\n      }\n    }\n  };\n};\n\nexport const login = data => {\n  return async dispatch => {\n    try {\n      const resp = await axios.post(``, data);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst loggedIn = user => {\n  return {\n    type: LOGIN,\n    payload: {\n      user\n    }\n  };\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/actionCreators.js"],"names":["axios","LOAD_FEED","LOAD_RECIPE","loadFeed","page","dispatch","recipes","get","params","apiKey","offset","number","console","log","data","loadedFeed","e","error","type","payload","results","totalResults","loadRecipe","recipeId","recipe","instructions","stepBreakdown","loadedRecipe","currentRecipe","login","resp","post","loggedIn","user","LOGIN"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,eAAvC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMC,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CACrB,mDADqB,EAErB;AACCC,QAAAA,MAAM,EAAE;AACPC,UAAAA,MAAM,EAAE,kCADD;AAEPC,UAAAA,MAAM,EAAE,MAAMN,IAAI,GAAG,CAAb,CAFD;AAGPO,UAAAA,MAAM,EAAE;AAHD;AADT,OAFqB,CAAtB;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,IAApB;AACAT,MAAAA,QAAQ,CAACU,UAAU,CAACT,OAAO,CAACQ,IAAT,CAAX,CAAR;AACA,KAbD,CAaE,OAAOE,CAAP,EAAU;AACXJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA;AACD,GAjBD;AAkBA,CAnBM;;AAqBP,MAAMD,UAAU,GAAID,IAAD,IAAU;AAC5B,SAAO;AACNI,IAAAA,IAAI,EAAEjB,SADA;AAENkB,IAAAA,OAAO,EAAE;AAAEb,MAAAA,OAAO,EAAEQ,IAAI,CAACM,OAAhB;AAAyBC,MAAAA,YAAY,EAAEP,IAAI,CAACO;AAA5C;AAFH,GAAP;AAIA,CALD;;AAOA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc;AACvC,SAAO,MAAOlB,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMmB,MAAM,GAAG,MAAMxB,KAAK,CAACO,GAAN,CACnB,uCAAsCgB,QAAS,cAD5B,EAEpB;AACCf,QAAAA,MAAM,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AADT,OAFoB,CAArB;AAQA,YAAMgB,YAAY,GAAG,MAAMzB,KAAK,CAACO,GAAN,CACzB,+DADyB,EAE1B;AACCC,QAAAA,MAAM,EAAE;AACPkB,UAAAA,aAAa,EAAE;AADR;AADT,OAF0B,CAA3B;AAQArB,MAAAA,QAAQ,CAACsB,YAAY,CAACH,MAAM,CAACV,IAAR,EAAcW,YAAY,CAACX,IAA3B,CAAb,CAAR;AACA,KAlBD,CAkBE,OAAOE,CAAP,EAAU;AACXJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA;AACD,GAtBD;AAuBA,CAxBM;;AA0BP,MAAMW,YAAY,GAAG,CAACH,MAAD,EAASC,YAAT,KAA0B;AAC9C,SAAO;AACNP,IAAAA,IAAI,EAAEhB,WADA;AAENiB,IAAAA,OAAO,EAAE;AAAES,MAAAA,aAAa,EAAE;AAAEJ,QAAAA,MAAF;AAAUC,QAAAA;AAAV;AAAjB;AAFH,GAAP;AAIA,CALD;;AAOA,OAAO,MAAMI,KAAK,GAAIf,IAAD,IAAU;AAC9B,SAAO,MAAOT,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMyB,IAAI,GAAG,MAAM9B,KAAK,CAAC+B,IAAN,CAAY,EAAZ,EAAejB,IAAf,CAAnB;AACA,KAFD,CAEE,OAAOE,CAAP,EAAU;AACXJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA;AACD,GAND;AAOA,CARM;;AAUP,MAAMgB,QAAQ,GAAIC,IAAD,IAAU;AAC1B,SAAO;AACNf,IAAAA,IAAI,EAAEgB,KADA;AAENf,IAAAA,OAAO,EAAE;AAAEc,MAAAA;AAAF;AAFH,GAAP;AAIA,CALD","sourcesContent":["import axios from \"axios\";\nimport { LOAD_FEED, LOAD_RECIPE } from \"./actionTypes\";\n\nexport const loadFeed = (page) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst recipes = await axios.get(\n\t\t\t\t\"https://api.spoonacular.com/recipes/complexSearch\",\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\t\t\toffset: 30 * (page - 1),\n\t\t\t\t\t\tnumber: 30,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(recipes.data);\n\t\t\tdispatch(loadedFeed(recipes.data));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst loadedFeed = (data) => {\n\treturn {\n\t\ttype: LOAD_FEED,\n\t\tpayload: { recipes: data.results, totalResults: data.totalResults },\n\t};\n};\n\nexport const loadRecipe = (recipeId) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst recipe = await axios.get(\n\t\t\t\t`https://api.spoonacular.com/recipes/${recipeId}/information`,\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst instructions = await axios.get(\n\t\t\t\t`https://api.spoonacular.com/recipes/{id}/analyzedInstructions`,\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstepBreakdown: true,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\tdispatch(loadedRecipe(recipe.data, instructions.data));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst loadedRecipe = (recipe, instructions) => {\n\treturn {\n\t\ttype: LOAD_RECIPE,\n\t\tpayload: { currentRecipe: { recipe, instructions } },\n\t};\n};\n\nexport const login = (data) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resp = await axios.post(``, data);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst loggedIn = (user) => {\n\treturn {\n\t\ttype: LOGIN,\n\t\tpayload: { user },\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}