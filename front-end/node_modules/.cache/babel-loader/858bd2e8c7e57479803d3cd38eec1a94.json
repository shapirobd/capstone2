{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/home/FilterPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useStyles } from \"./styles/FilterPanelStyles\";\nimport { Button } from \"@material-ui/core\";\nimport MacroInputs from \"./MacroInputs\";\nimport DietInputs from \"./DietInputs\";\nimport { useDispatch } from \"react-redux\";\nimport { filterFeed, loadFeed } from \"../../actionCreators/recipeActionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_DIETS = [\"glutenFree\", \"ketogenic\", \"vegetarian\", \"lactoVegetarian\", \"ovoVegetarian\", \"lactoOvoVegetarian\", \"vegan\", \"pescetarian\", \"paleo\", \"primal\", \"whole30\"];\nconst ALL_MACROS = [\"Fat\", \"Protein\", \"Carbohydrates\"];\n\nconst FilterPanel = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const INITIAL_FORM_DATA = {\n    diets: [],\n    macros: {\n      Fat: {\n        operator: null,\n        amount: null\n      },\n      Protein: {\n        operator: null,\n        amount: null\n      },\n      Carbohydrates: {\n        operator: null,\n        amount: null\n      }\n    }\n  };\n  const [formData, setFormData] = useState(INITIAL_FORM_DATA);\n  console.log(formData);\n\n  const resetFeed = evt => {\n    evt.preventDefault();\n    dispatch(loadFeed());\n  };\n\n  const handleChange = evt => {\n    let {\n      name,\n      value\n    } = evt.target;\n    let category;\n\n    if (name.startsWith(\"operator\")) {\n      name = name.slice(9);\n      category = \"operator\";\n    } else if (name.startsWith(\"amount\")) {\n      name = name.slice(7);\n      category = \"amount\";\n    }\n\n    setFormData(formData => {\n      if (ALL_MACROS.includes(name)) {\n        return { ...formData,\n          macros: { ...formData.macros,\n            [name]: { ...formData.macros[name],\n              [category]: value\n            }\n          }\n        };\n      } else if (name === \"recipeName\") {\n        return { ...formData,\n          [name]: value\n        };\n      }\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(formData);\n    console.log(\"FORM SUBMITTED\");\n    dispatch(filterFeed(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(DietInputs, {\n      allDiets: ALL_DIETS,\n      handleChange: handleChange,\n      setFormData: setFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MacroInputs, {\n      allMacros: ALL_MACROS,\n      handleChange: handleChange,\n      setFormData: setFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: classes.button,\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetFeed,\n        className: classes.resetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FilterPanel, \"FL2AgNr6xueCjWo9Vvxhjjm+TQ4=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = FilterPanel;\nexport default FilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/home/FilterPanel.js"],"names":["React","useState","useStyles","Button","MacroInputs","DietInputs","useDispatch","filterFeed","loadFeed","ALL_DIETS","ALL_MACROS","FilterPanel","classes","dispatch","INITIAL_FORM_DATA","diets","macros","Fat","operator","amount","Protein","Carbohydrates","formData","setFormData","console","log","resetFeed","evt","preventDefault","handleChange","name","value","target","category","startsWith","slice","includes","handleSubmit","root","width","button","resetButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useStyles } from \"./styles/FilterPanelStyles\";\nimport { Button } from \"@material-ui/core\";\nimport MacroInputs from \"./MacroInputs\";\nimport DietInputs from \"./DietInputs\";\nimport { useDispatch } from \"react-redux\";\nimport {\n\tfilterFeed,\n\tloadFeed,\n} from \"../../actionCreators/recipeActionCreators\";\n\nconst ALL_DIETS = [\n\t\"glutenFree\",\n\t\"ketogenic\",\n\t\"vegetarian\",\n\t\"lactoVegetarian\",\n\t\"ovoVegetarian\",\n\t\"lactoOvoVegetarian\",\n\t\"vegan\",\n\t\"pescetarian\",\n\t\"paleo\",\n\t\"primal\",\n\t\"whole30\",\n];\n\nconst ALL_MACROS = [\"Fat\", \"Protein\", \"Carbohydrates\"];\n\nconst FilterPanel = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst INITIAL_FORM_DATA = {\n\t\tdiets: [],\n\t\tmacros: {\n\t\t\tFat: {\n\t\t\t\toperator: null,\n\t\t\t\tamount: null,\n\t\t\t},\n\t\t\tProtein: {\n\t\t\t\toperator: null,\n\t\t\t\tamount: null,\n\t\t\t},\n\t\t\tCarbohydrates: {\n\t\t\t\toperator: null,\n\t\t\t\tamount: null,\n\t\t\t},\n\t\t},\n\t};\n\n\tconst [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\tconsole.log(formData);\n\n\tconst resetFeed = (evt) => {\n\t\tevt.preventDefault();\n\t\tdispatch(loadFeed());\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tlet { name, value } = evt.target;\n\t\tlet category;\n\n\t\tif (name.startsWith(\"operator\")) {\n\t\t\tname = name.slice(9);\n\t\t\tcategory = \"operator\";\n\t\t} else if (name.startsWith(\"amount\")) {\n\t\t\tname = name.slice(7);\n\t\t\tcategory = \"amount\";\n\t\t}\n\n\t\tsetFormData((formData) => {\n\t\t\tif (ALL_MACROS.includes(name)) {\n\t\t\t\treturn {\n\t\t\t\t\t...formData,\n\t\t\t\t\tmacros: {\n\t\t\t\t\t\t...formData.macros,\n\t\t\t\t\t\t[name]: {\n\t\t\t\t\t\t\t...formData.macros[name],\n\t\t\t\t\t\t\t[category]: value,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else if (name === \"recipeName\") {\n\t\t\t\treturn {\n\t\t\t\t\t...formData,\n\t\t\t\t\t[name]: value,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log(formData);\n\t\tconsole.log(\"FORM SUBMITTED\");\n\t\tdispatch(filterFeed(formData));\n\t};\n\n\treturn (\n\t\t<form className={classes.root} onSubmit={handleSubmit}>\n\t\t\t<DietInputs\n\t\t\t\tallDiets={ALL_DIETS}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tsetFormData={setFormData}\n\t\t\t/>\n\t\t\t<MacroInputs\n\t\t\t\tallMacros={ALL_MACROS}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tsetFormData={setFormData}\n\t\t\t/>\n\t\t\t<div style={{ width: \"100%\" }}>\n\t\t\t\t<Button type=\"submit\" className={classes.button}>\n\t\t\t\t\tApply\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={resetFeed} className={classes.resetButton}>\n\t\t\t\t\tReset\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default FilterPanel;\n"]},"metadata":{},"sourceType":"module"}