{"ast":null,"code":"import axios from \"axios\";\nexport const getPieChartData = (carbs = 0, fat = 0, protein = 0) => ({\n  labels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n  datasets: [{\n    data: [carbs, fat, protein],\n    backgroundColor: [\"#f44336\", \"#4caf50\", \"#2196f3\"]\n  }]\n});\nexport const getDateMacros = async (user, context, date, setDayState) => {\n  const mealIds = user.eatenMeals[date] || [];\n  let empty = false;\n  let meals;\n\n  if (mealIds.length) {\n    meals = await getMealsByIds(mealIds);\n  }\n\n  let macros;\n\n  if (meals) {\n    macros = await getMacrosFromMeals(meals);\n  } else {\n    macros = {\n      carbs: 0,\n      fat: 0,\n      protein: 0\n    };\n  }\n\n  if (context === \"day\") {\n    setDayState({\n      loaded: true,\n      empty,\n      date,\n      macros\n    });\n  } else {\n    return macros;\n  }\n};\n\nconst getMealsByIds = async ids => {\n  const meals = await axios.get(`https://api.spoonacular.com/recipes/informationBulk`, {\n    params: {\n      apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n      ids: ids.join(\",\"),\n      includeNutrition: true\n    }\n  });\n  return meals;\n};\n\nconst getMacrosFromMeals = async meals => {\n  const macros = {\n    carbs: meals.data.reduce((totalCarbs, meal) => {\n      return Math.round(totalCarbs + meal.nutrition.nutrients[3].amount) || 0;\n    }, 0),\n    fat: meals.data.reduce((totalFat, meal) => {\n      return Math.round(totalFat + meal.nutrition.nutrients[1].amount) || 0;\n    }, 0),\n    protein: meals.data.reduce((totalProtein, meal) => {\n      return Math.round(totalProtein + meal.nutrition.nutrients[8].amount) || 0;\n    }, 0)\n  };\n  return macros;\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/helpers/dailyHelpers.js"],"names":["axios","getPieChartData","carbs","fat","protein","labels","datasets","data","backgroundColor","getDateMacros","user","context","date","setDayState","mealIds","eatenMeals","empty","meals","length","getMealsByIds","macros","getMacrosFromMeals","loaded","ids","get","params","apiKey","join","includeNutrition","reduce","totalCarbs","meal","Math","round","nutrition","nutrients","amount","totalFat","totalProtein"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const getPieChartData = (carbs = 0, fat = 0, protein = 0) => ({\n\tlabels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n\tdatasets: [\n\t\t{\n\t\t\tdata: [carbs, fat, protein],\n\t\t\tbackgroundColor: [\"#f44336\", \"#4caf50\", \"#2196f3\"],\n\t\t},\n\t],\n});\n\nexport const getDateMacros = async (user, context, date, setDayState) => {\n\tconst mealIds = user.eatenMeals[date] || [];\n\tlet empty = false;\n\tlet meals;\n\tif (mealIds.length) {\n\t\tmeals = await getMealsByIds(mealIds);\n\t}\n\n\tlet macros;\n\tif (meals) {\n\t\tmacros = await getMacrosFromMeals(meals);\n\t} else {\n\t\tmacros = {\n\t\t\tcarbs: 0,\n\t\t\tfat: 0,\n\t\t\tprotein: 0,\n\t\t};\n\t}\n\n\tif (context === \"day\") {\n\t\tsetDayState({\n\t\t\tloaded: true,\n\t\t\tempty,\n\t\t\tdate,\n\t\t\tmacros,\n\t\t});\n\t} else {\n\t\treturn macros;\n\t}\n};\n\nconst getMealsByIds = async (ids) => {\n\tconst meals = await axios.get(\n\t\t`https://api.spoonacular.com/recipes/informationBulk`,\n\t\t{\n\t\t\tparams: {\n\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\tids: ids.join(\",\"),\n\t\t\t\tincludeNutrition: true,\n\t\t\t},\n\t\t}\n\t);\n\treturn meals;\n};\n\nconst getMacrosFromMeals = async (meals) => {\n\tconst macros = {\n\t\tcarbs: meals.data.reduce((totalCarbs, meal) => {\n\t\t\treturn Math.round(totalCarbs + meal.nutrition.nutrients[3].amount) || 0;\n\t\t}, 0),\n\t\tfat: meals.data.reduce((totalFat, meal) => {\n\t\t\treturn Math.round(totalFat + meal.nutrition.nutrients[1].amount) || 0;\n\t\t}, 0),\n\t\tprotein: meals.data.reduce((totalProtein, meal) => {\n\t\t\treturn Math.round(totalProtein + meal.nutrition.nutrients[8].amount) || 0;\n\t\t}, 0),\n\t};\n\treturn macros;\n};\n"]},"metadata":{},"sourceType":"module"}