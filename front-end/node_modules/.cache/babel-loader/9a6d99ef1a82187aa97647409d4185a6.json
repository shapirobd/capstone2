{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertDate = (date = new Date()) => {\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = date.getFullYear();\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst getDailyMacros = (carbs = 0, fat = 0, protein = 0) => ({\n  labels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n  datasets: [{\n    // label: \"Fat\",\n    data: [carbs, fat, protein],\n    backgroundColor: [\"red\", \"green\", \"blue\"]\n  }]\n});\n\nconst barData = {\n  labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n  datasets: [{\n    label: \"Fat\",\n    data: [120, 140, 130, 90, 200, 150, 110],\n    backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n  }]\n};\n\nconst TrackerPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user); // const [selectedDate, setSelectedDate] = useState(findDate());\n\n  const [calendarDate, setCalendarDate] = useState(new Date());\n  const [pieChartData, setPieChartData] = useState(getDailyMacros());\n  const [barChartData, setBarChartData] = useState(barData);\n  const [dayState, setDayState] = useState({\n    date: convertDate(calendarDate),\n    macros: {\n      carbs: 100,\n      fat: 90,\n      protein: 150\n    }\n  });\n  useEffect(() => {\n    const getCurrDateMacros = async () => {\n      const mealIds = await axios.get(`http://localhost:5000/users/${user.username}/getEatenMeals`, {\n        params: {\n          date: convertDate(calendarDate)\n        }\n      });\n      const meals = await axios.get(`https://api.spoonacular.com/recipes/informationBulk`, {\n        params: {\n          apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n          ids: mealIds.data.join(\",\"),\n          includeNutrition: true\n        }\n      });\n      const macros = {\n        carbs: meals.data.reduce((totalCarbs, meal) => {\n          return Math.round(totalCarbs + meal.nutrition.nutrients[3].amount);\n        }, 0),\n        fat: meals.data.reduce((totalFat, meal) => {\n          return Math.round(totalFat + meal.nutrition.nutrients[1].amount);\n        }, 0),\n        protein: meals.data.reduce((totalProtein, meal) => {\n          return Math.round(totalProtein + meal.nutrition.nutrients[8].amount);\n        }, 0)\n      };\n      setDayState({\n        date: convertDate(calendarDate),\n        macros\n      });\n    };\n\n    getCurrDateMacros();\n    let weeknumber = moment(convertDate(calendarDate), \"YYYY-MM-DD\").week();\n    console.log(weeknumber);\n  }, [calendarDate]);\n  useEffect(() => {\n    setPieChartData(getDailyMacros(dayState.macros.carbs, dayState.macros.fat, dayState.macros.protein));\n  }, [dayState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [console.log(calendarDate), console.log(convertDate(calendarDate)), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 2,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setCalendarDate,\n          value: calendarDate,\n          minDetail: \"year\",\n          className: classes.calendar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: pieChartData,\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 8,\n        className: classes.rightGridItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Weekly Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          color: \"primary\",\n          \"aria-label\": \"outlined primary button group\",\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Carbohydrates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData,\n          className: classes.barChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrackerPage, \"5OC9lMi6KXqKYK0Lp8bsELeE/tw=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TrackerPage;\nexport default TrackerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackerPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js"],"names":["React","useState","useEffect","useSelector","Grid","Typography","ButtonGroup","Button","useStyles","Doughnut","Bar","Calendar","moment","axios","convertDate","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","getDailyMacros","carbs","fat","protein","labels","datasets","data","backgroundColor","barData","label","TrackerPage","classes","user","state","calendarDate","setCalendarDate","pieChartData","setPieChartData","barChartData","setBarChartData","dayState","setDayState","macros","getCurrDateMacros","mealIds","get","username","params","meals","apiKey","ids","join","includeNutrition","reduce","totalCarbs","meal","Math","round","nutrition","nutrients","amount","totalFat","totalProtein","weeknumber","week","console","log","width","root","calendar","rightGridItem","buttonGroup","button","barChart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\n\nconst convertDate = (date = new Date()) => {\n\tlet dd = String(date.getDate()).padStart(2, \"0\");\n\tlet mm = String(date.getMonth() + 1).padStart(2, \"0\");\n\tlet yyyy = date.getFullYear();\n\treturn yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst getDailyMacros = (carbs = 0, fat = 0, protein = 0) => ({\n\tlabels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n\tdatasets: [\n\t\t{\n\t\t\t// label: \"Fat\",\n\t\t\tdata: [carbs, fat, protein],\n\t\t\tbackgroundColor: [\"red\", \"green\", \"blue\"],\n\t\t},\n\t],\n});\n\nconst barData = {\n\tlabels: [\n\t\t\"Monday\",\n\t\t\"Tuesday\",\n\t\t\"Wednesday\",\n\t\t\"Thursday\",\n\t\t\"Friday\",\n\t\t\"Saturday\",\n\t\t\"Sunday\",\n\t],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: \"Fat\",\n\t\t\tdata: [120, 140, 130, 90, 200, 150, 110],\n\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t},\n\t],\n};\n\nconst TrackerPage = () => {\n\tconst classes = useStyles();\n\tconst user = useSelector((state) => state.user);\n\t// const [selectedDate, setSelectedDate] = useState(findDate());\n\tconst [calendarDate, setCalendarDate] = useState(new Date());\n\tconst [pieChartData, setPieChartData] = useState(getDailyMacros());\n\tconst [barChartData, setBarChartData] = useState(barData);\n\tconst [dayState, setDayState] = useState({\n\t\tdate: convertDate(calendarDate),\n\t\tmacros: {\n\t\t\tcarbs: 100,\n\t\t\tfat: 90,\n\t\t\tprotein: 150,\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tconst getCurrDateMacros = async () => {\n\t\t\tconst mealIds = await axios.get(\n\t\t\t\t`http://localhost:5000/users/${user.username}/getEatenMeals`,\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tdate: convertDate(calendarDate),\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst meals = await axios.get(\n\t\t\t\t`https://api.spoonacular.com/recipes/informationBulk`,\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\t\t\tids: mealIds.data.join(\",\"),\n\t\t\t\t\t\tincludeNutrition: true,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst macros = {\n\t\t\t\tcarbs: meals.data.reduce((totalCarbs, meal) => {\n\t\t\t\t\treturn Math.round(totalCarbs + meal.nutrition.nutrients[3].amount);\n\t\t\t\t}, 0),\n\t\t\t\tfat: meals.data.reduce((totalFat, meal) => {\n\t\t\t\t\treturn Math.round(totalFat + meal.nutrition.nutrients[1].amount);\n\t\t\t\t}, 0),\n\t\t\t\tprotein: meals.data.reduce((totalProtein, meal) => {\n\t\t\t\t\treturn Math.round(totalProtein + meal.nutrition.nutrients[8].amount);\n\t\t\t\t}, 0),\n\t\t\t};\n\t\t\tsetDayState({\n\t\t\t\tdate: convertDate(calendarDate),\n\t\t\t\tmacros,\n\t\t\t});\n\t\t};\n\t\tgetCurrDateMacros();\n\t\tlet weeknumber = moment(convertDate(calendarDate), \"YYYY-MM-DD\").week();\n\t\tconsole.log(weeknumber);\n\t}, [calendarDate]);\n\n\tuseEffect(() => {\n\t\tsetPieChartData(\n\t\t\tgetDailyMacros(\n\t\t\t\tdayState.macros.carbs,\n\t\t\t\tdayState.macros.fat,\n\t\t\t\tdayState.macros.protein\n\t\t\t)\n\t\t);\n\t}, [dayState]);\n\n\treturn (\n\t\t<div style={{ width: \"100%\" }}>\n\t\t\t{console.log(calendarDate)}\n\t\t\t{console.log(convertDate(calendarDate))}\n\t\t\t<Grid container cols={2} className={classes.root}>\n\t\t\t\t<Grid item cols={1} md={3}>\n\t\t\t\t\t<Calendar\n\t\t\t\t\t\tonChange={setCalendarDate}\n\t\t\t\t\t\tvalue={calendarDate}\n\t\t\t\t\t\tminDetail=\"year\"\n\t\t\t\t\t\tclassName={classes.calendar}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Doughnut data={pieChartData} width={200} height={200} />\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item cols={1} md={8} className={classes.rightGridItem}>\n\t\t\t\t\t<Typography variant=\"h3\">Weekly Data</Typography>\n\t\t\t\t\t<ButtonGroup\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\taria-label=\"outlined primary button group\"\n\t\t\t\t\t\tclassName={classes.buttonGroup}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button className={classes.button}>Carbohydrates</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Fat</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Protein</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t<Bar data={barChartData} className={classes.barChart} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default TrackerPage;\n"]},"metadata":{},"sourceType":"module"}