{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { LOAD_FEED } from \"./actionTypes\"; // const dispatch = useDispatch();\n\nexport const loadFeed = page => {\n  return async dispatch => {\n    const recipes = await axios.get(\"https://api.spoonacular.com/recipes/complexSearch\", {\n      params: {\n        apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n        offset: 100 * (page - 1)\n      }\n    });\n    console.log(recipes);\n    dispatch(loadedFeed(recipes.data.results));\n  };\n};\n\nconst loadedFeed = recipes => {\n  return {\n    type: LOAD_FEED,\n    payload: recipes\n  };\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/actionCreators.js"],"names":["useDispatch","axios","LOAD_FEED","loadFeed","page","dispatch","recipes","get","params","apiKey","offset","console","log","loadedFeed","data","results","type","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CAEA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAOC,QAAP,IAAoB;AAC1B,UAAMC,OAAO,GAAG,MAAML,KAAK,CAACM,GAAN,CACrB,mDADqB,EAErB;AACCC,MAAAA,MAAM,EAAE;AACPC,QAAAA,MAAM,EAAE,kCADD;AAEPC,QAAAA,MAAM,EAAE,OAAON,IAAI,GAAG,CAAd;AAFD;AADT,KAFqB,CAAtB;AASAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAD,IAAAA,QAAQ,CAACQ,UAAU,CAACP,OAAO,CAACQ,IAAR,CAAaC,OAAd,CAAX,CAAR;AACA,GAZD;AAaA,CAdM;;AAgBP,MAAMF,UAAU,GAAIP,OAAD,IAAa;AAC/B,SAAO;AACNU,IAAAA,IAAI,EAAEd,SADA;AAENe,IAAAA,OAAO,EAAEX;AAFH,GAAP;AAIA,CALD","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { LOAD_FEED } from \"./actionTypes\";\n\n// const dispatch = useDispatch();\n\nexport const loadFeed = (page) => {\n\treturn async (dispatch) => {\n\t\tconst recipes = await axios.get(\n\t\t\t\"https://api.spoonacular.com/recipes/complexSearch\",\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\t\toffset: 100 * (page - 1),\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tconsole.log(recipes);\n\t\tdispatch(loadedFeed(recipes.data.results));\n\t};\n};\n\nconst loadedFeed = (recipes) => {\n\treturn {\n\t\ttype: LOAD_FEED,\n\t\tpayload: recipes,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}