{"ast":null,"code":"import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nconst INITIAL_STATE = {\n  feed: [],\n  page: 1,\n  countPerPage: 30,\n  totalResults: null,\n  token: null,\n  user: null,\n  currentRecipe: null\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"LOAD_FEED\":\n      {\n        const {\n          recipes,\n          totalResults\n        } = action.payload;\n        return { ...state,\n          feed: recipes,\n          totalResults\n        };\n      }\n\n    case \"CHANGE_PAGE\":\n      {\n        return { ...state,\n          page: action.payload\n        };\n      }\n\n    case \"LOAD_RECIPE\":\n      {\n        const {\n          currentRecipe\n        } = action.payload;\n        return { ...state,\n          currentRecipe\n        };\n      }\n\n    case \"LOGIN\":\n      {\n        const {\n          token,\n          user\n        } = action.payload;\n        return { ...state,\n          token,\n          user\n        };\n      }\n\n    case \"LOGOUT\":\n      {\n        return { ...state,\n          user: null,\n          token: null\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/reducers/rootReducer.js"],"names":["createStore","persistStore","persistReducer","INITIAL_STATE","feed","page","countPerPage","totalResults","token","user","currentRecipe","rootReducer","state","action","type","recipes","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,IAAI,EAAE,EADe;AAErBC,EAAAA,IAAI,EAAE,CAFe;AAGrBC,EAAAA,YAAY,EAAE,EAHO;AAIrBC,EAAAA,YAAY,EAAE,IAJO;AAKrBC,EAAAA,KAAK,EAAE,IALc;AAMrBC,EAAAA,IAAI,EAAE,IANe;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAtB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,aAAT,EAAwBU,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AAAkB;AACjB,cAAM;AAAEC,UAAAA,OAAF;AAAWR,UAAAA;AAAX,YAA4BM,MAAM,CAACG,OAAzC;AACA,eAAO,EAAE,GAAGJ,KAAL;AAAYR,UAAAA,IAAI,EAAEW,OAAlB;AAA2BR,UAAAA;AAA3B,SAAP;AACA;;AACD,SAAK,aAAL;AAAoB;AACnB,eAAO,EAAE,GAAGK,KAAL;AAAYP,UAAAA,IAAI,EAAEQ,MAAM,CAACG;AAAzB,SAAP;AACA;;AACD,SAAK,aAAL;AAAoB;AACnB,cAAM;AAAEN,UAAAA;AAAF,YAAoBG,MAAM,CAACG,OAAjC;AACA,eAAO,EAAE,GAAGJ,KAAL;AAAYF,UAAAA;AAAZ,SAAP;AACA;;AACD,SAAK,OAAL;AAAc;AACb,cAAM;AAAEF,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAkBI,MAAM,CAACG,OAA/B;AACA,eAAO,EAAE,GAAGJ,KAAL;AAAYJ,UAAAA,KAAZ;AAAmBC,UAAAA;AAAnB,SAAP;AACA;;AACD,SAAK,QAAL;AAAe;AACd,eAAO,EAAE,GAAGG,KAAL;AAAYH,UAAAA,IAAI,EAAE,IAAlB;AAAwBD,UAAAA,KAAK,EAAE;AAA/B,SAAP;AACA;;AACD;AAAS;AACR,eAAOI,KAAP;AACA;AArBF;AAuBA,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst INITIAL_STATE = {\n\tfeed: [],\n\tpage: 1,\n\tcountPerPage: 30,\n\ttotalResults: null,\n\ttoken: null,\n\tuser: null,\n\tcurrentRecipe: null,\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase \"LOAD_FEED\": {\n\t\t\tconst { recipes, totalResults } = action.payload;\n\t\t\treturn { ...state, feed: recipes, totalResults };\n\t\t}\n\t\tcase \"CHANGE_PAGE\": {\n\t\t\treturn { ...state, page: action.payload };\n\t\t}\n\t\tcase \"LOAD_RECIPE\": {\n\t\t\tconst { currentRecipe } = action.payload;\n\t\t\treturn { ...state, currentRecipe };\n\t\t}\n\t\tcase \"LOGIN\": {\n\t\t\tconst { token, user } = action.payload;\n\t\t\treturn { ...state, token, user };\n\t\t}\n\t\tcase \"LOGOUT\": {\n\t\t\treturn { ...state, user: null, token: null };\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}