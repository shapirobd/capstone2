{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/user/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useStyles } from \"./styles/ProfileStyles\";\nimport { Grid, Divider, Typography, TextField } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst capitalize = text => {\n  return text.replace(\"_\", \" \").split(\" \").map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(\" \");\n};\n\nconst Profile = () => {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  const [editting, setEditting] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 1,\n      spacing: 10,\n      justify: \"space-around\",\n      className: classes.gridContainer,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n        className: classes.editIcon,\n        onClick: () => setEditting(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        xs: 12,\n        className: classes.gridItem,\n        children: editting ? /*#__PURE__*/_jsxDEV(\"form\", {\n          children: Object.keys(user).map(key => /*#__PURE__*/_jsxDEV(TextField, {\n            name: key,\n            id: key,\n            label: capitalize(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profPic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.userInfo,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                textAlign: \"center\",\n                margin: \"20px 0\"\n              },\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              style: {\n                margin: \"20px 0\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"NAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [user.first_name, \" \", user.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this), Object.keys(user).map(key => key !== \"username\" && key !== \"first_name\" && key !== \"last_name\" && key !== \"bookmarks\" && key !== \"api_hash\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [console.log(key), /*#__PURE__*/_jsxDEV(Typography, {\n                children: key.toUpperCase().replace(\"_\", \" \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: user[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }, this) : null)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Profile, \"p90M6BihfBgM1XXZjEqrLohpJwc=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/user/Profile.js"],"names":["React","useState","useStyles","Grid","Divider","Typography","TextField","useSelector","EditIcon","capitalize","text","replace","split","map","s","charAt","toUpperCase","substring","join","Profile","classes","user","state","editting","setEditting","root","gridContainer","editIcon","gridItem","Object","keys","key","profPic","userInfo","textAlign","margin","username","display","justifyContent","first_name","last_name","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useStyles } from \"./styles/ProfileStyles\";\nimport { Grid, Divider, Typography, TextField } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst capitalize = (text) => {\n\treturn text\n\t\t.replace(\"_\", \" \")\n\t\t.split(\" \")\n\t\t.map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n\t\t.join(\" \");\n};\n\nconst Profile = () => {\n\tconst classes = useStyles();\n\tconst user = useSelector((state) => state.user);\n\n\tconst [editting, setEditting] = useState(false);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tcols={1}\n\t\t\t\tspacing={10}\n\t\t\t\tjustify=\"space-around\"\n\t\t\t\tclassName={classes.gridContainer}\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<EditIcon\n\t\t\t\t\tclassName={classes.editIcon}\n\t\t\t\t\tonClick={() => setEditting(true)}\n\t\t\t\t/>\n\t\t\t\t<Grid item cols={1} xs={12} className={classes.gridItem}>\n\t\t\t\t\t{editting ? (\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t{Object.keys(user).map((key) => (\n\t\t\t\t\t\t\t\t<TextField name={key} id={key} label={capitalize(key)} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className={classes.profPic}></div>\n\t\t\t\t\t\t\t<div className={classes.userInfo}>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t\tstyle={{ textAlign: \"center\", margin: \"20px 0\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{user.username}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Divider style={{ margin: \"20px 0\" }} />\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"space-between\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography>NAME</Typography>\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t{user.first_name} {user.last_name}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{Object.keys(user).map((key) =>\n\t\t\t\t\t\t\t\t\tkey !== \"username\" &&\n\t\t\t\t\t\t\t\t\tkey !== \"first_name\" &&\n\t\t\t\t\t\t\t\t\tkey !== \"last_name\" &&\n\t\t\t\t\t\t\t\t\tkey !== \"bookmarks\" &&\n\t\t\t\t\t\t\t\t\tkey !== \"api_hash\" ? (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{console.log(key)}\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t{key.toUpperCase().replace(\"_\", \" \")}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>{user[key]}</Typography>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{/* <Typography>Email: {user.email}</Typography>\n\t\t\t\t\t\t<Divider style={{ margin: \"20px 0\" }} />\n\n\t\t\t\t\t\t<Typography>Weight: {user.weight}</Typography>\n\t\t\t\t\t\t<Typography>Weight Goal: {user.weight_goal}</Typography>\n\t\t\t\t\t\t<Typography>Calorie Goal: {user.calorie_goal}</Typography> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* <Grid item cols={1} md={7} className={classes.gridItem}>\n\t\t\t\t\t<Typography>Weight: {user.weight}</Typography>\n\t\t\t\t\t<Typography>Weight Goal: {user.weight_goal}</Typography>\n\t\t\t\t\t<Typography>Calorie Goal: {user.calorie_goal}</Typography>\n\t\t\t\t</Grid> */}\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}