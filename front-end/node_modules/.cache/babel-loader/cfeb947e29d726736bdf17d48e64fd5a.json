{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/recipes/RecipeGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { GridList, GridListTile, ListSubheader, GridListTileBar, IconButton } from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useWindowDimensions from \"../../customHooks/getWindowDimensions\";\nimport RecipeTile from \"./RecipeTile\";\nimport BookmarkTile from \"./BookmarkTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\"\n  },\n  gridList: {\n    width: \"max-content\",\n    justifyContent: \"center\" // height: \"100%\",\n    // padding: \"20px\",\n\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  },\n  img: {\n    // height: \"100%\",\n    width: \"100%\"\n  }\n}));\n\nconst RecipeGrid = ({\n  feed,\n  areBookmarks,\n  removeBookmark\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    width\n  } = useWindowDimensions();\n  console.log(width);\n  const user = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 200 // spacing={3}\n      ,\n      cols: Math.round(width / 200),\n      className: classes.gridList,\n      children: feed.map(recipe => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.title,\n          className: classes.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: recipe.title,\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `info about ${recipe.title}`,\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, recipe.image, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RecipeGrid, \"7Jaktyg3vWKLymZyr9SVWoBiHmI=\", false, function () {\n  return [useStyles, useWindowDimensions, useSelector];\n});\n\n_c = RecipeGrid;\nexport default RecipeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/recipes/RecipeGrid.js"],"names":["React","useSelector","GridList","GridListTile","ListSubheader","GridListTileBar","IconButton","InfoIcon","makeStyles","useWindowDimensions","RecipeTile","BookmarkTile","useStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","width","icon","color","img","RecipeGrid","feed","areBookmarks","removeBookmark","classes","console","log","user","state","Math","round","map","recipe","image","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACCC,QADD,EAECC,YAFD,EAGCC,aAHD,EAICC,eAJD,EAKCC,UALD,QAMO,mBANP;AAOA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,cAAc,EAAE,cAHX;AAILC,IAAAA,QAAQ,EAAE;AAJL,GADkC;AAOxCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE,aADE;AAETH,IAAAA,cAAc,EAAE,QAFP,CAGT;AACA;;AAJS,GAP8B;AAaxCI,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAbkC;AAgBxCC,EAAAA,GAAG,EAAE;AACJ;AACAH,IAAAA,KAAK,EAAE;AAFH;AAhBmC,CAAZ,CAAD,CAA5B;;AAsBA,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAA4C;AAAA;;AAC9D,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAYX,mBAAmB,EAArC;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,QAAMW,IAAI,GAAG9B,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACd,IAAxB;AAAA,2BACC,QAAC,QAAD;AACC,MAAA,UAAU,EAAE,GADb,CAEC;AAFD;AAGC,MAAA,IAAI,EAAEmB,IAAI,CAACC,KAAL,CAAWd,KAAK,GAAG,GAAnB,CAHP;AAIC,MAAA,SAAS,EAAEQ,OAAO,CAACT,QAJpB;AAAA,gBAMEM,IAAI,CAACU,GAAL,CAAUC,MAAD,iBACT,QAAC,YAAD;AAAA,gCACC;AACC,UAAA,GAAG,EAAEA,MAAM,CAACC,KADb;AAEC,UAAA,GAAG,EAAED,MAAM,CAACE,KAFb;AAGC,UAAA,SAAS,EAAEV,OAAO,CAACL;AAHpB;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC,QAAC,eAAD;AACC,UAAA,KAAK,EAAEa,MAAM,CAACE,KADf;AAEC,UAAA,UAAU,eACT,QAAC,UAAD;AACC,0BAAa,cAAaF,MAAM,CAACE,KAAM,EADxC;AAEC,YAAA,SAAS,EAAEV,OAAO,CAACP,IAFpB;AAAA,mCAIC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA,SAAmBe,MAAM,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA,cADA;AANF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA,CAvCD;;GAAMb,U;UACWZ,S,EAEEH,mB,EAGLR,W;;;KANRuB,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n\tGridList,\n\tGridListTile,\n\tListSubheader,\n\tGridListTileBar,\n\tIconButton,\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useWindowDimensions from \"../../customHooks/getWindowDimensions\";\nimport RecipeTile from \"./RecipeTile\";\nimport BookmarkTile from \"./BookmarkTile\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tjustifyContent: \"space-around\",\n\t\toverflow: \"hidden\",\n\t},\n\tgridList: {\n\t\twidth: \"max-content\",\n\t\tjustifyContent: \"center\",\n\t\t// height: \"100%\",\n\t\t// padding: \"20px\",\n\t},\n\ticon: {\n\t\tcolor: \"rgba(255, 255, 255, 0.54)\",\n\t},\n\timg: {\n\t\t// height: \"100%\",\n\t\twidth: \"100%\",\n\t},\n}));\n\nconst RecipeGrid = ({ feed, areBookmarks, removeBookmark }) => {\n\tconst classes = useStyles();\n\n\tconst { width } = useWindowDimensions();\n\tconsole.log(width);\n\n\tconst user = useSelector((state) => state.user);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<GridList\n\t\t\t\tcellHeight={200}\n\t\t\t\t// spacing={3}\n\t\t\t\tcols={Math.round(width / 200)}\n\t\t\t\tclassName={classes.gridList}\n\t\t\t>\n\t\t\t\t{feed.map((recipe) => (\n\t\t\t\t\t<GridListTile key={recipe.image}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={recipe.image}\n\t\t\t\t\t\t\talt={recipe.title}\n\t\t\t\t\t\t\tclassName={classes.img}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\ttitle={recipe.title}\n\t\t\t\t\t\t\tactionIcon={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label={`info about ${recipe.title}`}\n\t\t\t\t\t\t\t\t\tclassName={classes.icon}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InfoIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t))}\n\t\t\t</GridList>\n\t\t</div>\n\t);\n};\n\nexport default RecipeGrid;\n"]},"metadata":{},"sourceType":"module"}