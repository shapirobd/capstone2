{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport \"react-calendar/dist/Calendar.css\";\nimport convertDate from \"../../helpers/convertDate\";\nimport { getPieChartData, getDateMacros } from \"./helpers/dailyHelpers\";\nimport { getBarChartData, getWeekNumber, getWeekDates, getWeekMacros } from \"./helpers/weeklyHelpers\";\nimport TrackerCalendar from \"./TrackerCalendar\";\nimport TrackerDoughnut from \"./TrackerDoughnut\";\nimport TrackerBarChart from \"./TrackerBarChart\";\nimport useWindowDimensions from \"../../customHooks/getWindowDimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrackerPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    width\n  } = useWindowDimensions();\n  const user = useSelector(state => state.user);\n  const [calendarDate, setCalendarDate] = useState(new Date());\n  const [dayState, setDayState] = useState({\n    loaded: false,\n    empty: false,\n    date: convertDate(calendarDate),\n    macros: {\n      carbs: null,\n      fat: null,\n      protein: null\n    }\n  });\n  const [weekState, setWeekState] = useState({\n    loaded: false,\n    empty: false,\n    weekNumber: null,\n    dates: getWeekDates(calendarDate),\n    weekData: {}\n  });\n  const [pieChartData, setPieChartData] = useState(undefined);\n  const [barChartData, setBarChartData] = useState(undefined);\n  useEffect(() => {\n    setPieChartData(getPieChartData());\n  }, []);\n  useEffect(() => {\n    setBarChartData(getBarChartData(weekState.weekData));\n  }, []);\n  useEffect(() => {\n    const updateWeekState = async () => {\n      getDateMacros(user, \"day\", convertDate(calendarDate), setDayState);\n      const weekData = await getWeekMacros(user, getWeekDates(calendarDate));\n      let empty = true;\n      Object.values(weekData).map(date => {\n        if (date.carbs || date.fat || date.protein) {\n          empty = false;\n        }\n      });\n\n      if (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n        setWeekState({\n          empty,\n          loaded: true,\n          weekNumber: getWeekNumber(calendarDate),\n          dates: getWeekDates(calendarDate),\n          weekData\n        });\n      }\n    };\n\n    updateWeekState();\n  }, [calendarDate, weekState, user]);\n  useEffect(() => {\n    setPieChartData(getPieChartData(dayState.macros.carbs, dayState.macros.fat, dayState.macros.protein));\n  }, [dayState]);\n  useEffect(() => {\n    setBarChartData(getBarChartData(weekState.weekData));\n  }, [weekState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [console.log(weekState), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 2,\n      className: width <= 599 ? classes.mobileRoot : classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 4,\n        className: width <= 599 ? classes.mobileGridItem : classes.gridItem,\n        children: [/*#__PURE__*/_jsxDEV(TrackerCalendar, {\n          calendarDate: calendarDate,\n          setCalendarDate: setCalendarDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TrackerDoughnut, {\n          dayState: dayState,\n          pieChartData: pieChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 8,\n        className: width <= 599 ? classes.mobileGridItem : classes.gridItem,\n        children: /*#__PURE__*/_jsxDEV(TrackerBarChart, {\n          weekState: weekState,\n          barChartData: barChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrackerPage, \"SSm6andNceZThxFIVFj2Xl055e4=\", false, function () {\n  return [useStyles, useWindowDimensions, useSelector];\n});\n\n_c = TrackerPage;\nexport default TrackerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackerPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js"],"names":["React","useState","useEffect","useSelector","Grid","useStyles","convertDate","getPieChartData","getDateMacros","getBarChartData","getWeekNumber","getWeekDates","getWeekMacros","TrackerCalendar","TrackerDoughnut","TrackerBarChart","useWindowDimensions","TrackerPage","classes","width","user","state","calendarDate","setCalendarDate","Date","dayState","setDayState","loaded","empty","date","macros","carbs","fat","protein","weekState","setWeekState","weekNumber","dates","weekData","pieChartData","setPieChartData","undefined","barChartData","setBarChartData","updateWeekState","Object","values","map","console","log","mobileRoot","root","mobileGridItem","gridItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport \"react-calendar/dist/Calendar.css\";\nimport convertDate from \"../../helpers/convertDate\";\nimport { getPieChartData, getDateMacros } from \"./helpers/dailyHelpers\";\nimport {\n\tgetBarChartData,\n\tgetWeekNumber,\n\tgetWeekDates,\n\tgetWeekMacros,\n} from \"./helpers/weeklyHelpers\";\nimport TrackerCalendar from \"./TrackerCalendar\";\nimport TrackerDoughnut from \"./TrackerDoughnut\";\nimport TrackerBarChart from \"./TrackerBarChart\";\nimport useWindowDimensions from \"../../customHooks/getWindowDimensions\";\n\nconst TrackerPage = () => {\n\tconst classes = useStyles();\n\tconst { width } = useWindowDimensions();\n\n\tconst user = useSelector((state) => state.user);\n\n\tconst [calendarDate, setCalendarDate] = useState(new Date());\n\tconst [dayState, setDayState] = useState({\n\t\tloaded: false,\n\t\tempty: false,\n\t\tdate: convertDate(calendarDate),\n\t\tmacros: {\n\t\t\tcarbs: null,\n\t\t\tfat: null,\n\t\t\tprotein: null,\n\t\t},\n\t});\n\tconst [weekState, setWeekState] = useState({\n\t\tloaded: false,\n\t\tempty: false,\n\t\tweekNumber: null,\n\t\tdates: getWeekDates(calendarDate),\n\t\tweekData: {},\n\t});\n\tconst [pieChartData, setPieChartData] = useState(undefined);\n\tconst [barChartData, setBarChartData] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tsetPieChartData(getPieChartData());\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetBarChartData(getBarChartData(weekState.weekData));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst updateWeekState = async () => {\n\t\t\tgetDateMacros(user, \"day\", convertDate(calendarDate), setDayState);\n\t\t\tconst weekData = await getWeekMacros(user, getWeekDates(calendarDate));\n\t\t\tlet empty = true;\n\t\t\tObject.values(weekData).map((date) => {\n\t\t\t\tif (date.carbs || date.fat || date.protein) {\n\t\t\t\t\tempty = false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n\t\t\t\tsetWeekState({\n\t\t\t\t\tempty,\n\t\t\t\t\tloaded: true,\n\t\t\t\t\tweekNumber: getWeekNumber(calendarDate),\n\t\t\t\t\tdates: getWeekDates(calendarDate),\n\t\t\t\t\tweekData,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tupdateWeekState();\n\t}, [calendarDate, weekState, user]);\n\n\tuseEffect(() => {\n\t\tsetPieChartData(\n\t\t\tgetPieChartData(\n\t\t\t\tdayState.macros.carbs,\n\t\t\t\tdayState.macros.fat,\n\t\t\t\tdayState.macros.protein\n\t\t\t)\n\t\t);\n\t}, [dayState]);\n\n\tuseEffect(() => {\n\t\tsetBarChartData(getBarChartData(weekState.weekData));\n\t}, [weekState]);\n\n\treturn (\n\t\t<div style={{ width: \"100%\" }}>\n\t\t\t{console.log(weekState)}\n\t\t\t<Grid container cols={2} className={width <= 599 ? classes.mobileRoot : classes.root}>\n\t\t\t\t<Grid item cols={1} md={4} className={width <= 599 ? classes.mobileGridItem : classes.gridItem}>\n\t\t\t\t\t<TrackerCalendar\n\t\t\t\t\t\tcalendarDate={calendarDate}\n\t\t\t\t\t\tsetCalendarDate={setCalendarDate}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<TrackerDoughnut dayState={dayState} pieChartData={pieChartData} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item cols={1} md={8} className={width <= 599 ? classes.mobileGridItem : classes.gridItem}>\n\t\t\t\t\t<TrackerBarChart weekState={weekState} barChartData={barChartData} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default TrackerPage;\n"]},"metadata":{},"sourceType":"module"}