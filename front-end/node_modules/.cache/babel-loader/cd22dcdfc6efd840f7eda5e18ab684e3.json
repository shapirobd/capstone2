{"ast":null,"code":"/**\n * Takes an object with info on how each macro should be filtered and condenses it into a smaller object\n * with info on only the information that is needed to filter the results\n * @param {Object} macros contains a key for each macro with info on how each should be filtered\n * @returns object containing condensed info on minimum and maximum values of certain macros to filter results with\n */\nfunction createMacrosParams(macros) {\n  const macrosParams = {};\n\n  if (Object.keys(macros).length) {\n    createMacroParam(\"Fat\", macros.Fat, macrosParams);\n    createMacroParam(\"Protein\", macros.Protein, macrosParams);\n    createMacroParam(\"Carbs\", macros.Carbohydrates, macrosParams);\n  }\n\n  return macrosParams;\n}\n/**\n * Generates a key, value pair for macrosParams that will provide information\n * on the min/max values for a given macronutrient\n * @param {Object} name the name of the macro whose filter data is being assessed (\"Fat\", \"Protein\", or \"Carbs\")\n * @param {Object} macros an object with an operator (\"<\" or \">\") and an amount to be compared to\n * @param {Object} macrosParams the final object to be returned by createMacrosParams\n */\n\n\nfunction createMacroParam(name, macro, macrosParams) {\n  if (macro.operator === \"<\" && macro.amount) macrosParams[`max${name}`] = macro.amount;\n  if (macro.operator === \">\" && macro.amount) macrosParams[`min${name}`] = macro.amount;\n}\n\nexport default createMacrosParams;","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/helpers/createMacrosParams.js"],"names":["createMacrosParams","macros","macrosParams","Object","keys","length","createMacroParam","Fat","Protein","Carbohydrates","name","macro","operator","amount"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,CAA4BC,MAA5B,EAAoC;AACnC,QAAMC,YAAY,GAAG,EAArB;;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAAxB,EAAgC;AAC/BC,IAAAA,gBAAgB,CAAC,KAAD,EAAQL,MAAM,CAACM,GAAf,EAAoBL,YAApB,CAAhB;AACAI,IAAAA,gBAAgB,CAAC,SAAD,EAAYL,MAAM,CAACO,OAAnB,EAA4BN,YAA5B,CAAhB;AACAI,IAAAA,gBAAgB,CAAC,OAAD,EAAUL,MAAM,CAACQ,aAAjB,EAAgCP,YAAhC,CAAhB;AACA;;AAED,SAAOA,YAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,gBAAT,CAA0BI,IAA1B,EAAgCC,KAAhC,EAAuCT,YAAvC,EAAqD;AACpD,MAAIS,KAAK,CAACC,QAAN,KAAmB,GAAnB,IAA0BD,KAAK,CAACE,MAApC,EACCX,YAAY,CAAE,MAAKQ,IAAK,EAAZ,CAAZ,GAA6BC,KAAK,CAACE,MAAnC;AACD,MAAIF,KAAK,CAACC,QAAN,KAAmB,GAAnB,IAA0BD,KAAK,CAACE,MAApC,EACCX,YAAY,CAAE,MAAKQ,IAAK,EAAZ,CAAZ,GAA6BC,KAAK,CAACE,MAAnC;AACD;;AAED,eAAeb,kBAAf","sourcesContent":["/**\n * Takes an object with info on how each macro should be filtered and condenses it into a smaller object\n * with info on only the information that is needed to filter the results\n * @param {Object} macros contains a key for each macro with info on how each should be filtered\n * @returns object containing condensed info on minimum and maximum values of certain macros to filter results with\n */\nfunction createMacrosParams(macros) {\n\tconst macrosParams = {};\n\n\tif (Object.keys(macros).length) {\n\t\tcreateMacroParam(\"Fat\", macros.Fat, macrosParams);\n\t\tcreateMacroParam(\"Protein\", macros.Protein, macrosParams);\n\t\tcreateMacroParam(\"Carbs\", macros.Carbohydrates, macrosParams);\n\t}\n\n\treturn macrosParams;\n}\n\n/**\n * Generates a key, value pair for macrosParams that will provide information\n * on the min/max values for a given macronutrient\n * @param {Object} name the name of the macro whose filter data is being assessed (\"Fat\", \"Protein\", or \"Carbs\")\n * @param {Object} macros an object with an operator (\"<\" or \">\") and an amount to be compared to\n * @param {Object} macrosParams the final object to be returned by createMacrosParams\n */\nfunction createMacroParam(name, macro, macrosParams) {\n\tif (macro.operator === \"<\" && macro.amount)\n\t\tmacrosParams[`max${name}`] = macro.amount;\n\tif (macro.operator === \">\" && macro.amount)\n\t\tmacrosParams[`min${name}`] = macro.amount;\n}\n\nexport default createMacrosParams;\n"]},"metadata":{},"sourceType":"module"}