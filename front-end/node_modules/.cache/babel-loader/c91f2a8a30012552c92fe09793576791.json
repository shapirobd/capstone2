{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN, LOGOUT } from \"../components/actionTypes\";\nconst API_URL = \"http://localhost:5000\";\nexport const register = data => {\n  return async dispatch => {\n    try {\n      const registerResp = await axios.post(`${API_URL}/auth/register`, data);\n      const {\n        token\n      } = registerResp.data;\n      const userResp = await axios.get(`${API_URL}/users/${data.username}`);\n      dispatch(registered(token, userResp.data));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst registered = (token, user) => {\n  const {\n    username,\n    email,\n    first_name,\n    last_name,\n    api_hash,\n    api_username,\n    bookmarks\n  } = user;\n  return {\n    type: LOGIN,\n    payload: {\n      feed: [],\n      token,\n      user: {\n        username,\n        email,\n        first_name,\n        last_name,\n        api_hash,\n        api_username,\n        bookmarks\n      }\n    }\n  };\n};\n\nexport const login = data => {\n  return async dispatch => {\n    try {\n      const user = await axios.post(`${API_URL}/auth/login`, data);\n      const {\n        api_hash\n      } = user.data;\n      dispatch(loggedIn(api_hash, user.data));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst loggedIn = (token, user) => {\n  const {\n    username,\n    email,\n    first_name,\n    last_name,\n    api_hash,\n    bookmarks\n  } = user;\n  return {\n    type: LOGIN,\n    payload: {\n      token,\n      user: {\n        username,\n        email,\n        first_name,\n        last_name,\n        api_hash,\n        bookmarks\n      }\n    }\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n    payload: {\n      feed: []\n    }\n  };\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/actionCreators/userActionCreators.js"],"names":["axios","LOGIN","LOGOUT","API_URL","register","data","dispatch","registerResp","post","token","userResp","get","username","registered","e","console","error","user","email","first_name","last_name","api_hash","api_username","bookmarks","type","payload","feed","login","loggedIn","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,2BAA9B;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMC,YAAY,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAY,GAAEL,OAAQ,gBAAtB,EAAuCE,IAAvC,CAA3B;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAYF,YAAY,CAACF,IAA/B;AACA,YAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAER,OAAQ,UAASE,IAAI,CAACO,QAAS,EAA5C,CAAvB;AACAN,MAAAA,QAAQ,CAACO,UAAU,CAACJ,KAAD,EAAQC,QAAQ,CAACL,IAAjB,CAAX,CAAR;AACA,KALD,CAKE,OAAOS,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GATD;AAUA,CAXM;;AAaP,MAAMD,UAAU,GAAG,CAACJ,KAAD,EAAQQ,IAAR,KAAiB;AACnC,QAAM;AACLL,IAAAA,QADK;AAELM,IAAAA,KAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA,SAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,YANK;AAOLC,IAAAA;AAPK,MAQFN,IARJ;AASA,SAAO;AACNO,IAAAA,IAAI,EAAEvB,KADA;AAENwB,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAE,EADE;AAERjB,MAAAA,KAFQ;AAGRQ,MAAAA,IAAI,EAAE;AACLL,QAAAA,QADK;AAELM,QAAAA,KAFK;AAGLC,QAAAA,UAHK;AAILC,QAAAA,SAJK;AAKLC,QAAAA,QALK;AAMLC,QAAAA,YANK;AAOLC,QAAAA;AAPK;AAHE;AAFH,GAAP;AAgBA,CA1BD;;AA4BA,OAAO,MAAMI,KAAK,GAAItB,IAAD,IAAU;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMW,IAAI,GAAG,MAAMjB,KAAK,CAACQ,IAAN,CAAY,GAAEL,OAAQ,aAAtB,EAAoCE,IAApC,CAAnB;AACA,YAAM;AAAEgB,QAAAA;AAAF,UAAeJ,IAAI,CAACZ,IAA1B;AACAC,MAAAA,QAAQ,CAACsB,QAAQ,CAACP,QAAD,EAAWJ,IAAI,CAACZ,IAAhB,CAAT,CAAR;AACA,KAJD,CAIE,OAAOS,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GARD;AASA,CAVM;;AAYP,MAAMc,QAAQ,GAAG,CAACnB,KAAD,EAAQQ,IAAR,KAAiB;AACjC,QAAM;AAAEL,IAAAA,QAAF;AAAYM,IAAAA,KAAZ;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA,SAA/B;AAA0CC,IAAAA,QAA1C;AAAoDE,IAAAA;AAApD,MAAkEN,IAAxE;AACA,SAAO;AACNO,IAAAA,IAAI,EAAEvB,KADA;AAENwB,IAAAA,OAAO,EAAE;AACRhB,MAAAA,KADQ;AAERQ,MAAAA,IAAI,EAAE;AACLL,QAAAA,QADK;AAELM,QAAAA,KAFK;AAGLC,QAAAA,UAHK;AAILC,QAAAA,SAJK;AAKLC,QAAAA,QALK;AAMLE,QAAAA;AANK;AAFE;AAFH,GAAP;AAcA,CAhBD;;AAkBA,OAAO,MAAMM,MAAM,GAAG,MAAM;AAC3B,SAAO;AACNL,IAAAA,IAAI,EAAEtB,MADA;AAENuB,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAE;AADE;AAFH,GAAP;AAMA,CAPM","sourcesContent":["import axios from \"axios\";\nimport { LOGIN, LOGOUT } from \"../components/actionTypes\";\n\nconst API_URL = \"http://localhost:5000\";\n\nexport const register = (data) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst registerResp = await axios.post(`${API_URL}/auth/register`, data);\n\t\t\tconst { token } = registerResp.data;\n\t\t\tconst userResp = await axios.get(`${API_URL}/users/${data.username}`);\n\t\t\tdispatch(registered(token, userResp.data));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst registered = (token, user) => {\n\tconst {\n\t\tusername,\n\t\temail,\n\t\tfirst_name,\n\t\tlast_name,\n\t\tapi_hash,\n\t\tapi_username,\n\t\tbookmarks,\n\t} = user;\n\treturn {\n\t\ttype: LOGIN,\n\t\tpayload: {\n\t\t\tfeed: [],\n\t\t\ttoken,\n\t\t\tuser: {\n\t\t\t\tusername,\n\t\t\t\temail,\n\t\t\t\tfirst_name,\n\t\t\t\tlast_name,\n\t\t\t\tapi_hash,\n\t\t\t\tapi_username,\n\t\t\t\tbookmarks,\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport const login = (data) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst user = await axios.post(`${API_URL}/auth/login`, data);\n\t\t\tconst { api_hash } = user.data;\n\t\t\tdispatch(loggedIn(api_hash, user.data));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\nconst loggedIn = (token, user) => {\n\tconst { username, email, first_name, last_name, api_hash, bookmarks } = user;\n\treturn {\n\t\ttype: LOGIN,\n\t\tpayload: {\n\t\t\ttoken,\n\t\t\tuser: {\n\t\t\t\tusername,\n\t\t\t\temail,\n\t\t\t\tfirst_name,\n\t\t\t\tlast_name,\n\t\t\t\tapi_hash,\n\t\t\t\tbookmarks,\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport const logout = () => {\n\treturn {\n\t\ttype: LOGOUT,\n\t\tpayload: {\n\t\t\tfeed: [],\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}