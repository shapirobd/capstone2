{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertDate = (date = new Date()) => {\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = date.getFullYear();\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst getDailyMacros = (carbs = 0, fat = 0, protein = 0) => ({\n  labels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n  datasets: [{\n    // label: \"Fat\",\n    data: [carbs, fat, protein],\n    backgroundColor: [\"red\", \"green\", \"blue\"]\n  }]\n});\n\nconst getWeeklyMacros = dates => ({\n  labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  datasets: [{\n    label: \"Carbohydrates\",\n    data: [120, 140, 130, 90, 200, 150, 110],\n    backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n  }, {\n    label: \"Fat\",\n    data: [120, 140, 130, 90, 200, 150, 110],\n    backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n  }, {\n    label: \"Protein\",\n    data: [120, 140, 130, 90, 200, 150, 110],\n    backgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"]\n  }]\n});\n\nconst getWeekNumber = calendarDate => {\n  return moment(convertDate(calendarDate), \"YYYY-MM-DD\").week();\n};\n\nconst getWeekDates = calendarDate => {\n  return [0, 1, 2, 3, 4, 5, 6].map(d => convertDate(moment(`${convertDate(calendarDate).substring(0, 4)}-${getWeekNumber(calendarDate)}-` + d, \"YYYY-w-e\")[\"_d\"]));\n};\n\nconst TrackerPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user); // const [selectedDate, setSelectedDate] = useState(findDate());\n\n  const [calendarDate, setCalendarDate] = useState(new Date());\n  const [pieChartData, setPieChartData] = useState(getDailyMacros());\n  const [barChartData, setBarChartData] = useState(getWeeklyMacros());\n  const [dayState, setDayState] = useState({\n    date: convertDate(calendarDate),\n    macros: {\n      carbs: 100,\n      fat: 90,\n      protein: 150\n    }\n  });\n  const [weekState, setWeekState] = useState({\n    weekNumber: null,\n    dates: getWeekDates(calendarDate),\n    weekData: {}\n  });\n\n  const getDateMacros = async (context = \"day\", date = calendarDate) => {\n    if (context === \"week\") console.log(date);\n    const mealIds = await axios.get(`http://localhost:5000/users/${user.username}/getEatenMeals`, {\n      params: {\n        date: context === \"day\" ? convertDate(date) : date\n      }\n    });\n    if (context === \"week\") console.log(mealIds);\n    const meals = await axios.get(`https://api.spoonacular.com/recipes/informationBulk`, {\n      params: {\n        apiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n        ids: mealIds.data.join(\",\"),\n        includeNutrition: true\n      }\n    });\n    if (context === \"week\") console.log(meals);\n    const macros = {\n      carbs: meals.data.reduce((totalCarbs, meal) => {\n        return Math.round(totalCarbs + meal.nutrition.nutrients[3].amount);\n      }, 0),\n      fat: meals.data.reduce((totalFat, meal) => {\n        return Math.round(totalFat + meal.nutrition.nutrients[1].amount);\n      }, 0),\n      protein: meals.data.reduce((totalProtein, meal) => {\n        return Math.round(totalProtein + meal.nutrition.nutrients[8].amount);\n      }, 0)\n    };\n\n    if (context === \"day\") {\n      setDayState({\n        date: convertDate(date),\n        macros\n      });\n    } else {\n      console.log(macros);\n      return macros;\n    }\n  };\n\n  const getWeekMacros = weekDates => {\n    const weekData = {};\n    weekDates.map(date => {\n      const updateWeekData = async () => {\n        const dateMacros = await getDateMacros(\"week\", date);\n        console.log(\"DATEMACROS\", dateMacros);\n        weekData[date] = dateMacros;\n      };\n\n      updateWeekData();\n    });\n    console.log(weekData);\n    setWeekState(weekState => ({ ...weekState,\n      weekData\n    }));\n  };\n\n  useEffect(() => {\n    getDateMacros();\n\n    if (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n      console.log(\"WRONG\");\n      setWeekState({\n        weekNumber: getWeekNumber(calendarDate),\n        dates: getWeekDates(calendarDate),\n        weekData: getWeekMacros(getWeekDates(calendarDate))\n      });\n    }\n  }, [calendarDate]);\n  useEffect(() => {\n    setPieChartData(getDailyMacros(dayState.macros.carbs, dayState.macros.fat, dayState.macros.protein));\n  }, [dayState]);\n  useEffect(() => {\n    setBarChartData(getWeeklyMacros());\n  }, [weekState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [console.log(weekState), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      cols: 2,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setCalendarDate,\n          value: calendarDate,\n          minDetail: \"year\",\n          className: classes.calendar,\n          calendarType: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: pieChartData,\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        cols: 1,\n        md: 8,\n        className: classes.rightGridItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Weekly Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          color: \"primary\",\n          \"aria-label\": \"outlined primary button group\",\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Carbohydrates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData,\n          className: classes.barChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrackerPage, \"2+PzMEtCbhdQYcD90CZYHU/BMsc=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TrackerPage;\nexport default TrackerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackerPage\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/tracker/TrackerPage.js"],"names":["React","useState","useEffect","useSelector","Grid","Typography","ButtonGroup","Button","useStyles","Doughnut","Bar","Calendar","moment","axios","convertDate","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","getDailyMacros","carbs","fat","protein","labels","datasets","data","backgroundColor","getWeeklyMacros","dates","label","getWeekNumber","calendarDate","week","getWeekDates","map","d","substring","TrackerPage","classes","user","state","setCalendarDate","pieChartData","setPieChartData","barChartData","setBarChartData","dayState","setDayState","macros","weekState","setWeekState","weekNumber","weekData","getDateMacros","context","console","log","mealIds","get","username","params","meals","apiKey","ids","join","includeNutrition","reduce","totalCarbs","meal","Math","round","nutrition","nutrients","amount","totalFat","totalProtein","getWeekMacros","weekDates","updateWeekData","dateMacros","width","root","calendar","rightGridItem","buttonGroup","button","barChart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Typography, ButtonGroup, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/TrackerPageStyles\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\n\nconst convertDate = (date = new Date()) => {\n\tlet dd = String(date.getDate()).padStart(2, \"0\");\n\tlet mm = String(date.getMonth() + 1).padStart(2, \"0\");\n\tlet yyyy = date.getFullYear();\n\treturn yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst getDailyMacros = (carbs = 0, fat = 0, protein = 0) => ({\n\tlabels: [\"Carbohydraetes\", \"Fat\", \"Protein\"],\n\tdatasets: [\n\t\t{\n\t\t\t// label: \"Fat\",\n\t\t\tdata: [carbs, fat, protein],\n\t\t\tbackgroundColor: [\"red\", \"green\", \"blue\"],\n\t\t},\n\t],\n});\n\nconst getWeeklyMacros = (dates) => ({\n\tlabels: [\n\t\t\"Sunday\",\n\t\t\"Monday\",\n\t\t\"Tuesday\",\n\t\t\"Wednesday\",\n\t\t\"Thursday\",\n\t\t\"Friday\",\n\t\t\"Saturday\",\n\t],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: \"Carbohydrates\",\n\t\t\tdata: [120, 140, 130, 90, 200, 150, 110],\n\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t},\n\t\t{\n\t\t\tlabel: \"Fat\",\n\t\t\tdata: [120, 140, 130, 90, 200, 150, 110],\n\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t},\n\t\t{\n\t\t\tlabel: \"Protein\",\n\t\t\tdata: [120, 140, 130, 90, 200, 150, 110],\n\t\t\tbackgroundColor: [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n\t\t},\n\t],\n});\n\nconst getWeekNumber = (calendarDate) => {\n\treturn moment(convertDate(calendarDate), \"YYYY-MM-DD\").week();\n};\n\nconst getWeekDates = (calendarDate) => {\n\treturn [0, 1, 2, 3, 4, 5, 6].map((d) =>\n\t\tconvertDate(\n\t\t\tmoment(\n\t\t\t\t`${convertDate(calendarDate).substring(0, 4)}-${getWeekNumber(\n\t\t\t\t\tcalendarDate\n\t\t\t\t)}-` + d,\n\t\t\t\t\"YYYY-w-e\"\n\t\t\t)[\"_d\"]\n\t\t)\n\t);\n};\n\nconst TrackerPage = () => {\n\tconst classes = useStyles();\n\tconst user = useSelector((state) => state.user);\n\t// const [selectedDate, setSelectedDate] = useState(findDate());\n\tconst [calendarDate, setCalendarDate] = useState(new Date());\n\tconst [pieChartData, setPieChartData] = useState(getDailyMacros());\n\tconst [barChartData, setBarChartData] = useState(getWeeklyMacros());\n\tconst [dayState, setDayState] = useState({\n\t\tdate: convertDate(calendarDate),\n\t\tmacros: {\n\t\t\tcarbs: 100,\n\t\t\tfat: 90,\n\t\t\tprotein: 150,\n\t\t},\n\t});\n\tconst [weekState, setWeekState] = useState({\n\t\tweekNumber: null,\n\t\tdates: getWeekDates(calendarDate),\n\t\tweekData: {},\n\t});\n\n\tconst getDateMacros = async (context = \"day\", date = calendarDate) => {\n\t\tif (context === \"week\") console.log(date);\n\t\tconst mealIds = await axios.get(\n\t\t\t`http://localhost:5000/users/${user.username}/getEatenMeals`,\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tdate: context === \"day\" ? convertDate(date) : date,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tif (context === \"week\") console.log(mealIds);\n\t\tconst meals = await axios.get(\n\t\t\t`https://api.spoonacular.com/recipes/informationBulk`,\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: \"73baf9bb95a14f5fb4d71e2f12ab8479\",\n\t\t\t\t\tids: mealIds.data.join(\",\"),\n\t\t\t\t\tincludeNutrition: true,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tif (context === \"week\") console.log(meals);\n\n\t\tconst macros = {\n\t\t\tcarbs: meals.data.reduce((totalCarbs, meal) => {\n\t\t\t\treturn Math.round(totalCarbs + meal.nutrition.nutrients[3].amount);\n\t\t\t}, 0),\n\t\t\tfat: meals.data.reduce((totalFat, meal) => {\n\t\t\t\treturn Math.round(totalFat + meal.nutrition.nutrients[1].amount);\n\t\t\t}, 0),\n\t\t\tprotein: meals.data.reduce((totalProtein, meal) => {\n\t\t\t\treturn Math.round(totalProtein + meal.nutrition.nutrients[8].amount);\n\t\t\t}, 0),\n\t\t};\n\t\tif (context === \"day\") {\n\t\t\tsetDayState({\n\t\t\t\tdate: convertDate(date),\n\t\t\t\tmacros,\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(macros);\n\t\t\treturn macros;\n\t\t}\n\t};\n\n\tconst getWeekMacros = (weekDates) => {\n\t\tconst weekData = {};\n\t\tweekDates.map((date) => {\n\t\t\tconst updateWeekData = async () => {\n\t\t\t\tconst dateMacros = await getDateMacros(\"week\", date);\n\t\t\t\tconsole.log(\"DATEMACROS\", dateMacros);\n\t\t\t\tweekData[date] = dateMacros;\n\t\t\t};\n\t\t\tupdateWeekData();\n\t\t});\n\t\tconsole.log(weekData);\n\t\tsetWeekState((weekState) => ({\n\t\t\t...weekState,\n\t\t\tweekData,\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tgetDateMacros();\n\t\tif (getWeekNumber(calendarDate) !== weekState.weekNumber) {\n\t\t\tconsole.log(\"WRONG\");\n\t\t\tsetWeekState({\n\t\t\t\tweekNumber: getWeekNumber(calendarDate),\n\t\t\t\tdates: getWeekDates(calendarDate),\n\t\t\t\tweekData: getWeekMacros(getWeekDates(calendarDate)),\n\t\t\t});\n\t\t}\n\t}, [calendarDate]);\n\n\tuseEffect(() => {\n\t\tsetPieChartData(\n\t\t\tgetDailyMacros(\n\t\t\t\tdayState.macros.carbs,\n\t\t\t\tdayState.macros.fat,\n\t\t\t\tdayState.macros.protein\n\t\t\t)\n\t\t);\n\t}, [dayState]);\n\n\tuseEffect(() => {\n\t\tsetBarChartData(getWeeklyMacros());\n\t}, [weekState]);\n\n\treturn (\n\t\t<div style={{ width: \"100%\" }}>\n\t\t\t{console.log(weekState)}\n\t\t\t<Grid container cols={2} className={classes.root}>\n\t\t\t\t<Grid item cols={1} md={3}>\n\t\t\t\t\t<Calendar\n\t\t\t\t\t\tonChange={setCalendarDate}\n\t\t\t\t\t\tvalue={calendarDate}\n\t\t\t\t\t\tminDetail=\"year\"\n\t\t\t\t\t\tclassName={classes.calendar}\n\t\t\t\t\t\tcalendarType=\"US\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Doughnut data={pieChartData} width={200} height={200} />\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item cols={1} md={8} className={classes.rightGridItem}>\n\t\t\t\t\t<Typography variant=\"h3\">Weekly Data</Typography>\n\t\t\t\t\t<ButtonGroup\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\taria-label=\"outlined primary button group\"\n\t\t\t\t\t\tclassName={classes.buttonGroup}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button className={classes.button}>Carbohydrates</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Fat</Button>\n\t\t\t\t\t\t<Button className={classes.button}>Protein</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t<Bar data={barChartData} className={classes.barChart} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default TrackerPage;\n"]},"metadata":{},"sourceType":"module"}