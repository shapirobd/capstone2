{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadRecipe } from \"../actionCreators/recipeActionCreators\";\nimport { bookmarkRecipe } from \"../actionCreators/bookmarkActionCreators\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PieChart from \"./PieChart\";\nimport NutrientList from \"./NutrientList\";\nimport DietList from \"./DietList\";\nimport RecipeSteps from \"./RecipeSteps\";\nimport { generateMacros } from \"../helpers/generateMacros\";\nimport { Typography, Grid, Button, ButtonGroup } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: \"0 75px\"\n  },\n  grid: {\n    margin: \"20px 0\"\n  },\n  image: {\n    width: \"100%\"\n  },\n  buttonGroup: {\n    margin: \"15px 0\"\n  },\n  button: {\n    color: \"#fff\",\n    backgroundColor: \"#4caf50\",\n    border: \"1px solid #fff\",\n    \"&:hover\": {\n      backgroundColor: \"#81c784\"\n    }\n  },\n  main: {\n    padding: \"0 36px 0 0 !important\"\n  },\n  infoPanel: {\n    padding: \"0 !important\"\n  }\n}));\n\nconst Recipe = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    recipeId\n  } = useParams();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const currentRecipe = useSelector(state => state.currentRecipe);\n  console.log(currentRecipe);\n  const {\n    recipe,\n    instructions\n  } = currentRecipe;\n  const {\n    diets\n  } = recipe;\n  const {\n    nutrients,\n    caloricBreakdown\n  } = recipe.nutrition;\n  const calories = nutrients[0].amount;\n  const macronutrients = generateMacros(nutrients);\n  const [isBookmarked, setIsBookmarked] = useState(false);\n\n  const toggleBookmarked = () => {\n    setIsBookmarked(!isBookmarked);\n\n    if (isBookmarked) {\n      bookmarkRecipe(user.username, currentRecipe.id);\n    } else {\n      unbookmarkRecipe(user.username, currentRecipe.id);\n    }\n  };\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      dispatch(loadRecipe(recipeId, user.api_hash));\n    };\n\n    getRecipe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: currentRecipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        className: classes.grid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          className: classes.main,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            className: classes.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            fullWidth: true,\n            className: classes.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: classes.button,\n              children: \"I ate this\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.button,\n              onClick: toggleBookmarked,\n              children: isBookmarked ? \"Unbookmark\" : \"Bookmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(RecipeSteps, {\n            steps: instructions.steps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          className: classes.infoPanel,\n          children: [/*#__PURE__*/_jsxDEV(DietList, {\n            diets: diets\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n            title: \"Caloric Breakdown\",\n            caloricBreakdown: caloricBreakdown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(NutrientList, {\n            title: \"Macronutrients\",\n            data: macronutrients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Recipe, \"5fdfn4GL2DxET2JpORYVBbBrklo=\", false, function () {\n  return [useStyles, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/Recipe.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","loadRecipe","bookmarkRecipe","makeStyles","PieChart","NutrientList","DietList","RecipeSteps","generateMacros","Typography","Grid","Button","ButtonGroup","useStyles","root","margin","grid","image","width","buttonGroup","button","color","backgroundColor","border","main","padding","infoPanel","Recipe","classes","recipeId","dispatch","user","state","currentRecipe","console","log","recipe","instructions","diets","nutrients","caloricBreakdown","nutrition","calories","amount","macronutrients","isBookmarked","setIsBookmarked","toggleBookmarked","username","id","unbookmarkRecipe","getRecipe","api_hash","title","steps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadRecipe } from \"../actionCreators/recipeActionCreators\";\nimport { bookmarkRecipe } from \"../actionCreators/bookmarkActionCreators\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PieChart from \"./PieChart\";\nimport NutrientList from \"./NutrientList\";\nimport DietList from \"./DietList\";\nimport RecipeSteps from \"./RecipeSteps\";\nimport { generateMacros } from \"../helpers/generateMacros\";\nimport { Typography, Grid, Button, ButtonGroup } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\tmargin: \"0 75px\",\n\t},\n\tgrid: {\n\t\tmargin: \"20px 0\",\n\t},\n\timage: {\n\t\twidth: \"100%\",\n\t},\n\tbuttonGroup: {\n\t\tmargin: \"15px 0\",\n\t},\n\tbutton: {\n\t\tcolor: \"#fff\",\n\t\tbackgroundColor: \"#4caf50\",\n\t\tborder: \"1px solid #fff\",\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: \"#81c784\",\n\t\t},\n\t},\n\tmain: {\n\t\tpadding: \"0 36px 0 0 !important\",\n\t},\n\tinfoPanel: {\n\t\tpadding: \"0 !important\",\n\t},\n}));\n\nconst Recipe = () => {\n\tconst classes = useStyles();\n\tconst { recipeId } = useParams();\n\tconst dispatch = useDispatch();\n\tconst user = useSelector((state) => state.user);\n\tconst currentRecipe = useSelector((state) => state.currentRecipe);\n\tconsole.log(currentRecipe);\n\n\tconst { recipe, instructions } = currentRecipe;\n\tconst { diets } = recipe;\n\tconst { nutrients, caloricBreakdown } = recipe.nutrition;\n\tconst calories = nutrients[0].amount;\n\n\tconst macronutrients = generateMacros(nutrients);\n\n\tconst [isBookmarked, setIsBookmarked] = useState(false);\n\n\tconst toggleBookmarked = () => {\n\t\tsetIsBookmarked(!isBookmarked);\n\t\tif (isBookmarked) {\n\t\t\tbookmarkRecipe(user.username, currentRecipe.id);\n\t\t} else {\n\t\t\tunbookmarkRecipe(user.username, currentRecipe.id);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst getRecipe = async () => {\n\t\t\tdispatch(loadRecipe(recipeId, user.api_hash));\n\t\t};\n\t\tgetRecipe();\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{currentRecipe ? (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant=\"h3\">{recipe.title}</Typography>\n\t\t\t\t\t<Grid container spacing={3} className={classes.grid}>\n\t\t\t\t\t\t<Grid item xs={12} md={8} className={classes.main}>\n\t\t\t\t\t\t\t<img src={recipe.image} className={classes.image} />\n\t\t\t\t\t\t\t<ButtonGroup fullWidth className={classes.buttonGroup}>\n\t\t\t\t\t\t\t\t<Button className={classes.button}>I ate this</Button>\n\t\t\t\t\t\t\t\t<Button className={classes.button} onClick={toggleBookmarked}>\n\t\t\t\t\t\t\t\t\t{isBookmarked ? \"Unbookmark\" : \"Bookmark\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t<RecipeSteps steps={instructions.steps} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} md={4} className={classes.infoPanel}>\n\t\t\t\t\t\t\t<DietList diets={diets} />\n\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\ttitle=\"Caloric Breakdown\"\n\t\t\t\t\t\t\t\tcaloricBreakdown={caloricBreakdown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<NutrientList\n\t\t\t\t\t\t\t\ttitle=\"Macronutrients\"\n\t\t\t\t\t\t\t\tdata={macronutrients}\n\t\t\t\t\t\t\t></NutrientList>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}