{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/RecipeGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport useWindowDimensions from \"../customHooks/getWindowDimensions\"; // const useStyles = makeStyles(() => ({\n// \tgridList: {\n// \t\twidth: \"75%\",\n// \t},\n// \tgridTile: {\n// \t\tmargin: \"20px 0\",\n// \t\theight: \"auto\",\n// \t},\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\" // overflow: \"hidden\",\n    // backgroundColor: theme.palette.background.paper,\n\n  },\n  gridList: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  gridTile: {// width: \"20%\",\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\n\nconst RecipeGrid = ({\n  feed\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n\n  const handleClick = evt => {\n    const {\n      name\n    } = evt.target;\n    dispatch(loadRecipe(name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cols: Math.floor(width / 300),\n      spacing: 20,\n      cellHeight: 180,\n      className: classes.gridList,\n      children: feed.map(recipe => /*#__PURE__*/_jsxDEV(GridListTile, {\n        name: recipe.id,\n        cols: 1,\n        className: classes.gridTile,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RecipeGrid, \"EEZgFClcBvD4iwydkFOQULwbkCo=\", false, function () {\n  return [useStyles, useWindowDimensions];\n});\n\n_c = RecipeGrid;\nexport default RecipeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/RecipeGrid.js"],"names":["React","Link","GridList","GridListTile","GridListTileBar","makeStyles","withWidth","isWidthUp","useWindowDimensions","useStyles","theme","root","display","flexWrap","justifyContent","gridList","width","height","gridTile","icon","color","RecipeGrid","feed","classes","handleClick","evt","name","target","dispatch","loadRecipe","Math","floor","map","recipe","id","image","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,eAAjC,QAAwD,mBAAxD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,IAAoBC,SAApB,QAAqC,6BAArC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,cAAc,EAAE,QAHX,CAIL;AACA;;AALK,GADkC;AAQxCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE;AAFC,GAR8B;AAYxCC,EAAAA,QAAQ,EAAE,CACT;AADS,GAZ8B;AAexCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF;AAfkC,CAAZ,CAAD,CAA5B;;AAoBA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEA,QAAM;AAAEQ,IAAAA,MAAF;AAAUD,IAAAA;AAAV,MAAoBR,mBAAmB,EAA7C;;AAEA,QAAMgB,WAAW,GAAIC,GAAD,IAAS;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,GAAG,CAACE,MAArB;AACAC,IAAAA,QAAQ,CAACC,UAAU,CAACH,IAAD,CAAX,CAAR;AACA,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACZ,IAAxB;AAAA,2BACC,QAAC,QAAD;AACC,MAAA,IAAI,EAAEmB,IAAI,CAACC,KAAL,CAAWf,KAAK,GAAG,GAAnB,CADP;AAEC,MAAA,OAAO,EAAE,EAFV;AAGC,MAAA,UAAU,EAAE,GAHb;AAIC,MAAA,SAAS,EAAEO,OAAO,CAACR,QAJpB;AAAA,gBAMEO,IAAI,CAACU,GAAL,CAAUC,MAAD,iBACT,QAAC,YAAD;AAEC,QAAA,IAAI,EAAEA,MAAM,CAACC,EAFd;AAGC,QAAA,IAAI,EAAE,CAHP;AAIC,QAAA,SAAS,EAAEX,OAAO,CAACL,QAJpB;AAKC,QAAA,OAAO,EAAEM,WALV;AAAA,+BAOC,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWS,MAAM,CAACC,EAAG,EAAhC;AAAA,kCACC;AAAK,YAAA,GAAG,EAAED,MAAM,CAACE,KAAjB;AAAwB,YAAA,GAAG,EAAEF,MAAM,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEH,MAAM,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAPD,SACMH,MAAM,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADA;AANF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA,CAnCD;;GAAMb,U;UACWZ,S,EAEUD,mB;;;KAHrBa,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GridList, GridListTile, GridListTileBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport useWindowDimensions from \"../customHooks/getWindowDimensions\";\n\n// const useStyles = makeStyles(() => ({\n// \tgridList: {\n// \t\twidth: \"75%\",\n// \t},\n// \tgridTile: {\n// \t\tmargin: \"20px 0\",\n// \t\theight: \"auto\",\n// \t},\n// }));\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tjustifyContent: \"center\",\n\t\t// overflow: \"hidden\",\n\t\t// backgroundColor: theme.palette.background.paper,\n\t},\n\tgridList: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tgridTile: {\n\t\t// width: \"20%\",\n\t},\n\ticon: {\n\t\tcolor: \"rgba(255, 255, 255, 0.54)\",\n\t},\n}));\n\nconst RecipeGrid = ({ feed }) => {\n\tconst classes = useStyles();\n\n\tconst { height, width } = useWindowDimensions();\n\n\tconst handleClick = (evt) => {\n\t\tconst { name } = evt.target;\n\t\tdispatch(loadRecipe(name));\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<GridList\n\t\t\t\tcols={Math.floor(width / 300)}\n\t\t\t\tspacing={20}\n\t\t\t\tcellHeight={180}\n\t\t\t\tclassName={classes.gridList}\n\t\t\t>\n\t\t\t\t{feed.map((recipe) => (\n\t\t\t\t\t<GridListTile\n\t\t\t\t\t\tkey={recipe.id}\n\t\t\t\t\t\tname={recipe.id}\n\t\t\t\t\t\tcols={1}\n\t\t\t\t\t\tclassName={classes.gridTile}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link to={`/recipes/${recipe.id}`}>\n\t\t\t\t\t\t\t<img src={recipe.image} alt={recipe.title} />\n\t\t\t\t\t\t\t<GridListTileBar title={recipe.title} />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t))}\n\t\t\t</GridList>\n\t\t</div>\n\t);\n};\n\nexport default RecipeGrid;\n"]},"metadata":{},"sourceType":"module"}