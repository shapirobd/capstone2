{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/RecipeGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GridList, GridListTile, GridListTileBar, Badge, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport useWindowDimensions from \"../customHooks/getWindowDimensions\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { unbookmarkRecipe } from \"../actionCreators/bookmarkActionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\" // padding: \"10px\",\n    // overflow: \"hidden\",\n    // backgroundColor: theme.palette.background.paper,\n\n  },\n  gridList: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\"\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\n\nconst RecipeGrid = ({\n  feed,\n  areBookmarks\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const user = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cols: Math.floor(width / 300),\n      spacing: 20,\n      cellHeight: 180,\n      className: classes.gridList,\n      children: feed.map(recipe => areBookmarks ? /*#__PURE__*/_jsxDEV(BookmarkTile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(GridListTile, {\n        name: recipe.id,\n        cols: 1,\n        className: classes.gridTile,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe.id}`,\n          style: {\n            overflow: \"hidden\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.title,\n            className: classes.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RecipeGrid, \"d4y4piw8Z6BaY5Afs9yD4YOEIAk=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useWindowDimensions, useSelector];\n});\n\n_c = RecipeGrid;\nexport default RecipeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/RecipeGrid.js"],"names":["React","useDispatch","useSelector","Link","useHistory","GridList","GridListTile","GridListTileBar","Badge","Button","makeStyles","withWidth","isWidthUp","useWindowDimensions","ClearIcon","unbookmarkRecipe","useStyles","theme","root","display","flexWrap","justifyContent","gridList","width","height","padding","icon","color","RecipeGrid","feed","areBookmarks","classes","history","dispatch","user","state","Math","floor","map","recipe","id","gridTile","overflow","image","title","img"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n\tGridList,\n\tGridListTile,\n\tGridListTileBar,\n\tBadge,\n\tButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport useWindowDimensions from \"../customHooks/getWindowDimensions\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { unbookmarkRecipe } from \"../actionCreators/bookmarkActionCreators\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tjustifyContent: \"center\",\n\t\t// padding: \"10px\",\n\t\t// overflow: \"hidden\",\n\t\t// backgroundColor: theme.palette.background.paper,\n\t},\n\tgridList: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tpadding: \"20px\",\n\t},\n\ticon: {\n\t\tcolor: \"rgba(255, 255, 255, 0.54)\",\n\t},\n}));\n\nconst RecipeGrid = ({ feed, areBookmarks }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\tconst { height, width } = useWindowDimensions();\n\n\tconst user = useSelector((state) => state.user);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<GridList\n\t\t\t\tcols={Math.floor(width / 300)}\n\t\t\t\tspacing={20}\n\t\t\t\tcellHeight={180}\n\t\t\t\tclassName={classes.gridList}\n\t\t\t>\n\t\t\t\t{feed.map((recipe) =>\n\t\t\t\t\tareBookmarks ? (\n\t\t\t\t\t\t<BookmarkTile />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<GridListTile\n\t\t\t\t\t\t\tkey={recipe.id}\n\t\t\t\t\t\t\tname={recipe.id}\n\t\t\t\t\t\t\tcols={1}\n\t\t\t\t\t\t\tclassName={classes.gridTile}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* <Button>X</Button> */}\n\t\t\t\t\t\t\t<Link to={`/recipes/${recipe.id}`} style={{ overflow: \"hidden\" }}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={recipe.image}\n\t\t\t\t\t\t\t\t\talt={recipe.title}\n\t\t\t\t\t\t\t\t\tclassName={classes.img}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<GridListTileBar title={recipe.title} />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</GridList>\n\t\t</div>\n\t);\n};\n\nexport default RecipeGrid;\n"]},"metadata":{},"sourceType":"module"}