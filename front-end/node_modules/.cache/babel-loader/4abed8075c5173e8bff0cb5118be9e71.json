{"ast":null,"code":"var _jsxFileName = \"/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadRecipe } from \"../actionCreators/recipeActionCreators\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PieChart from \"./PieChart\";\nimport NutrientList from \"./NutrientList\";\nimport RecipeSteps from \"./RecipeSteps\";\nimport { Typography, Grid, Button, List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, Badge } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: \"0 75px\"\n  },\n  grid: {\n    margin: \"20px 0\"\n  },\n  image: {\n    width: \"100%\"\n  },\n  main: {\n    padding: \"0 36px 0 0 !important\"\n  },\n  infoPanel: {\n    // border: \"3px solid #378E3C\",\n    // borderRadius: \"5px\",\n    padding: \"0 !important\"\n  }\n}));\n\nconst Recipe = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    recipeId\n  } = useParams();\n  const dispatch = useDispatch();\n  const currentRecipe = useSelector(state => state.currentRecipe);\n  console.log(currentRecipe);\n  const {\n    recipe,\n    instructions\n  } = currentRecipe;\n  const {\n    nutrients,\n    caloricBreakdown\n  } = recipe.nutrition;\n  const calories = nutrients[0].amount;\n  const macronutrients = {\n    fat: {\n      name: \"Fat\",\n      amount: nutrients[1].amount,\n      subNutrients: {\n        saturatedFat: {\n          name: \"Saturated Fat\",\n          amount: nutrients[2].amount\n        }\n      }\n    },\n    carbohydrates: {\n      name: \"Carbohydrates\",\n      amount: nutrients[3].amount,\n      subNutrients: {\n        fiber: {\n          name: \"Fiber\",\n          amount: nutrients[13].amount\n        },\n        netCarbohydrates: {\n          name: \"Net Carbohydrates\",\n          amount: nutrients[4].amount\n        },\n        sugar: {\n          name: \"Sugar\",\n          amount: nutrients[5].amount\n        }\n      }\n    },\n    protein: {\n      name: \"Protein\",\n      amount: nutrients[8].amount,\n      subNutrients: {}\n    }\n  };\n  useEffect(() => {\n    const getRecipe = async () => {\n      console.log(\"1. INITIAL RENDER\");\n      dispatch(loadRecipe(recipeId));\n    };\n\n    getRecipe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: currentRecipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        className: classes.grid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          className: classes.main,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            className: classes.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"I ate this\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Steps: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: instructions.steps.map(step => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: step.number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: step.step\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 12\n                }, this)]\n              }, step.number, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          className: classes.infoPanel,\n          children: [/*#__PURE__*/_jsxDEV(PieChart, {\n            title: \"Caloric Breakdown\",\n            caloricBreakdown: caloricBreakdown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(NutrientList, {\n            title: \"Macronutrients\",\n            data: macronutrients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Recipe, \"NeiDRNlVyaOtumX7qRDk7aI9Rwc=\", false, function () {\n  return [useStyles, useParams, useDispatch, useSelector];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/components/Recipe.js"],"names":["React","useEffect","useParams","useDispatch","useSelector","loadRecipe","makeStyles","PieChart","NutrientList","RecipeSteps","Typography","Grid","Button","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Badge","useStyles","root","margin","grid","image","width","main","padding","infoPanel","Recipe","classes","recipeId","dispatch","currentRecipe","state","console","log","recipe","instructions","nutrients","caloricBreakdown","nutrition","calories","amount","macronutrients","fat","name","subNutrients","saturatedFat","carbohydrates","fiber","netCarbohydrates","sugar","protein","getRecipe","title","steps","map","step","number"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadRecipe } from \"../actionCreators/recipeActionCreators\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PieChart from \"./PieChart\";\nimport NutrientList from \"./NutrientList\";\nimport RecipeSteps from \"./RecipeSteps\";\nimport {\n\tTypography,\n\tGrid,\n\tButton,\n\tList,\n\tListItem,\n\tDivider,\n\tListItemText,\n\tListItemAvatar,\n\tAvatar,\n\tBadge,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\tmargin: \"0 75px\",\n\t},\n\tgrid: {\n\t\tmargin: \"20px 0\",\n\t},\n\timage: {\n\t\twidth: \"100%\",\n\t},\n\tmain: {\n\t\tpadding: \"0 36px 0 0 !important\",\n\t},\n\tinfoPanel: {\n\t\t// border: \"3px solid #378E3C\",\n\t\t// borderRadius: \"5px\",\n\t\tpadding: \"0 !important\",\n\t},\n}));\n\nconst Recipe = () => {\n\tconst classes = useStyles();\n\tconst { recipeId } = useParams();\n\tconst dispatch = useDispatch();\n\tconst currentRecipe = useSelector((state) => state.currentRecipe);\n\tconsole.log(currentRecipe);\n\tconst { recipe, instructions } = currentRecipe;\n\tconst { nutrients, caloricBreakdown } = recipe.nutrition;\n\tconst calories = nutrients[0].amount;\n\n\tconst macronutrients = {\n\t\tfat: {\n\t\t\tname: \"Fat\",\n\t\t\tamount: nutrients[1].amount,\n\t\t\tsubNutrients: {\n\t\t\t\tsaturatedFat: {\n\t\t\t\t\tname: \"Saturated Fat\",\n\t\t\t\t\tamount: nutrients[2].amount,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tcarbohydrates: {\n\t\t\tname: \"Carbohydrates\",\n\t\t\tamount: nutrients[3].amount,\n\t\t\tsubNutrients: {\n\t\t\t\tfiber: {\n\t\t\t\t\tname: \"Fiber\",\n\t\t\t\t\tamount: nutrients[13].amount,\n\t\t\t\t},\n\t\t\t\tnetCarbohydrates: {\n\t\t\t\t\tname: \"Net Carbohydrates\",\n\t\t\t\t\tamount: nutrients[4].amount,\n\t\t\t\t},\n\t\t\t\tsugar: {\n\t\t\t\t\tname: \"Sugar\",\n\t\t\t\t\tamount: nutrients[5].amount,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tprotein: {\n\t\t\tname: \"Protein\",\n\t\t\tamount: nutrients[8].amount,\n\t\t\tsubNutrients: {},\n\t\t},\n\t};\n\n\tuseEffect(() => {\n\t\tconst getRecipe = async () => {\n\t\t\tconsole.log(\"1. INITIAL RENDER\");\n\t\t\tdispatch(loadRecipe(recipeId));\n\t\t};\n\t\tgetRecipe();\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{currentRecipe ? (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant=\"h3\">{recipe.title}</Typography>\n\t\t\t\t\t<Grid container spacing={3} className={classes.grid}>\n\t\t\t\t\t\t<Grid item xs={12} md={8} className={classes.main}>\n\t\t\t\t\t\t\t<img src={recipe.image} className={classes.image} />\n\t\t\t\t\t\t\t<Button>I ate this</Button>\n\t\t\t\t\t\t\t<Button>Bookmark</Button>\n\t\t\t\t\t\t\t<h2>Steps: </h2>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{instructions.steps.map((step) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ListItem key={step.number} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar>{step.number}</Avatar>\n\t\t\t\t\t\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText>{step.step}</ListItemText>\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} md={4} className={classes.infoPanel}>\n\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\ttitle=\"Caloric Breakdown\"\n\t\t\t\t\t\t\t\tcaloricBreakdown={caloricBreakdown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<NutrientList\n\t\t\t\t\t\t\t\ttitle=\"Macronutrients\"\n\t\t\t\t\t\t\t\tdata={macronutrients}\n\t\t\t\t\t\t\t></NutrientList>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}