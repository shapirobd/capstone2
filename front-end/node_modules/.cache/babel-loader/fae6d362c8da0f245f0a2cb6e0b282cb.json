{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_EATEN_MEAL, REMOVE_EATEN_MEAL } from \"../components/actionTypes\";\nconst API_URL = \"http://localhost:5000\"; // adds eaten meal to database as well as redux state for a given date\n// by dispatching action created by addedEatenMeal()\n\nexport const addEatenMeal = (username, recipeId, date, nutrients, eatenMeals) => {\n  return async dispatch => {\n    try {\n      await axios.post(`${API_URL}/users/addEatenMeal`, {\n        username,\n        recipeId,\n        date,\n        nutrients: {\n          calories: nutrients[0].amount,\n          fat: nutrients[1].amount,\n          carbs: nutrients[3].amount,\n          protein: nutrients[8].amount\n        }\n      });\n      dispatch(addedEatenMeal(recipeId, date));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n}; // returns action to be dispatched containing id of recipe\n// to be eaten and date that it was eaten\n\nconst addedEatenMeal = (recipeId, date) => {\n  return {\n    type: ADD_EATEN_MEAL,\n    payload: {\n      recipeId,\n      date\n    }\n  };\n}; // removes eaten meal from database as well as redux state for a given date\n// by dispatching action created by removedEatenMeal()\n\n\nexport const removeEatenMeal = (username, recipeId, date) => {\n  return async dispatch => {\n    try {\n      await axios.post(`${API_URL}/users/removeEatenMeal`, {\n        username,\n        recipeId,\n        date\n      });\n      dispatch(removedEatenMeal(recipeId, date));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n}; // returns action to be dispatched containing id of recipe\n// to be removed and date that it was eaten\n\nconst removedEatenMeal = (recipeId, date) => {\n  return {\n    type: REMOVE_EATEN_MEAL,\n    payload: {\n      recipeId,\n      date\n    }\n  };\n};","map":{"version":3,"sources":["/Users/briand.shapiro/Desktop/Springboard/capstone2/front-end/src/actionCreators/trackerActionCreators.js"],"names":["axios","ADD_EATEN_MEAL","REMOVE_EATEN_MEAL","API_URL","addEatenMeal","username","recipeId","date","nutrients","eatenMeals","dispatch","post","calories","amount","fat","carbs","protein","addedEatenMeal","e","console","error","type","payload","removeEatenMeal","removedEatenMeal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,2BAAlD;AAEA,MAAMC,OAAO,GAAG,uBAAhB,C,CAEA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAC3BC,QAD2B,EAE3BC,QAF2B,EAG3BC,IAH2B,EAI3BC,SAJ2B,EAK3BC,UAL2B,KAMvB;AACJ,SAAO,MAAOC,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMV,KAAK,CAACW,IAAN,CAAY,GAAER,OAAQ,qBAAtB,EAA4C;AACjDE,QAAAA,QADiD;AAEjDC,QAAAA,QAFiD;AAGjDC,QAAAA,IAHiD;AAIjDC,QAAAA,SAAS,EAAE;AACVI,UAAAA,QAAQ,EAAEJ,SAAS,CAAC,CAAD,CAAT,CAAaK,MADb;AAEVC,UAAAA,GAAG,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaK,MAFR;AAGVE,UAAAA,KAAK,EAAEP,SAAS,CAAC,CAAD,CAAT,CAAaK,MAHV;AAIVG,UAAAA,OAAO,EAAER,SAAS,CAAC,CAAD,CAAT,CAAaK;AAJZ;AAJsC,OAA5C,CAAN;AAWAH,MAAAA,QAAQ,CAACO,cAAc,CAACX,QAAD,EAAWC,IAAX,CAAf,CAAR;AACA,KAbD,CAaE,OAAOW,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GAjBD;AAkBA,CAzBM,C,CA2BP;AACA;;AACA,MAAMD,cAAc,GAAG,CAACX,QAAD,EAAWC,IAAX,KAAoB;AAC1C,SAAO;AACNc,IAAAA,IAAI,EAAEpB,cADA;AAENqB,IAAAA,OAAO,EAAE;AACRhB,MAAAA,QADQ;AAERC,MAAAA;AAFQ;AAFH,GAAP;AAOA,CARD,C,CAUA;AACA;;;AACA,OAAO,MAAMgB,eAAe,GAAG,CAAClB,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;AAC5D,SAAO,MAAOG,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMV,KAAK,CAACW,IAAN,CAAY,GAAER,OAAQ,wBAAtB,EAA+C;AACpDE,QAAAA,QADoD;AAEpDC,QAAAA,QAFoD;AAGpDC,QAAAA;AAHoD,OAA/C,CAAN;AAKAG,MAAAA,QAAQ,CAACc,gBAAgB,CAAClB,QAAD,EAAWC,IAAX,CAAjB,CAAR;AACA,KAPD,CAOE,OAAOW,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GAXD;AAYA,CAbM,C,CAeP;AACA;;AACA,MAAMM,gBAAgB,GAAG,CAAClB,QAAD,EAAWC,IAAX,KAAoB;AAC5C,SAAO;AACNc,IAAAA,IAAI,EAAEnB,iBADA;AAENoB,IAAAA,OAAO,EAAE;AACRhB,MAAAA,QADQ;AAERC,MAAAA;AAFQ;AAFH,GAAP;AAOA,CARD","sourcesContent":["import axios from \"axios\";\nimport { ADD_EATEN_MEAL, REMOVE_EATEN_MEAL } from \"../components/actionTypes\";\n\nconst API_URL = \"http://localhost:5000\";\n\n// adds eaten meal to database as well as redux state for a given date\n// by dispatching action created by addedEatenMeal()\nexport const addEatenMeal = (\n\tusername,\n\trecipeId,\n\tdate,\n\tnutrients,\n\teatenMeals\n) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tawait axios.post(`${API_URL}/users/addEatenMeal`, {\n\t\t\t\tusername,\n\t\t\t\trecipeId,\n\t\t\t\tdate,\n\t\t\t\tnutrients: {\n\t\t\t\t\tcalories: nutrients[0].amount,\n\t\t\t\t\tfat: nutrients[1].amount,\n\t\t\t\t\tcarbs: nutrients[3].amount,\n\t\t\t\t\tprotein: nutrients[8].amount,\n\t\t\t\t},\n\t\t\t});\n\t\t\tdispatch(addedEatenMeal(recipeId, date));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\n// returns action to be dispatched containing id of recipe\n// to be eaten and date that it was eaten\nconst addedEatenMeal = (recipeId, date) => {\n\treturn {\n\t\ttype: ADD_EATEN_MEAL,\n\t\tpayload: {\n\t\t\trecipeId,\n\t\t\tdate,\n\t\t},\n\t};\n};\n\n// removes eaten meal from database as well as redux state for a given date\n// by dispatching action created by removedEatenMeal()\nexport const removeEatenMeal = (username, recipeId, date) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tawait axios.post(`${API_URL}/users/removeEatenMeal`, {\n\t\t\t\tusername,\n\t\t\t\trecipeId,\n\t\t\t\tdate,\n\t\t\t});\n\t\t\tdispatch(removedEatenMeal(recipeId, date));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n};\n\n// returns action to be dispatched containing id of recipe\n// to be removed and date that it was eaten\nconst removedEatenMeal = (recipeId, date) => {\n\treturn {\n\t\ttype: REMOVE_EATEN_MEAL,\n\t\tpayload: {\n\t\t\trecipeId,\n\t\t\tdate,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}